<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王子泰</title>
  
  <subtitle>哭也欢乐，悲也潇洒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wang22ti.com/"/>
  <updated>2018-04-02T04:48:09.312Z</updated>
  <id>http://wang22ti.com/</id>
  
  <author>
    <name>wang22ti</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《操作系统》作业2.5-进程控制块的类C语言描述</title>
    <link href="http://wang22ti.com/2018/04/02/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B%E4%BD%9C%E4%B8%9A2-5-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%9D%97%E7%9A%84%E7%B1%BBC%E8%AF%AD%E8%A8%80%E6%8F%8F%E8%BF%B0/"/>
    <id>http://wang22ti.com/2018/04/02/《操作系统》作业2-5-进程控制块的类C语言描述/</id>
    <published>2018-04-02T04:42:26.000Z</published>
    <updated>2018-04-02T04:48:09.312Z</updated>
    
    <content type="html"><![CDATA[<p>这个作业差点要手写，倒腾了一晚上，肯定还有很多问题，就先贴在这里吧。</p><p>2.5 试根据你自己的理解，采用类C语言设计和描述操作系统关于进程控制块的数据结构、组织方式及管理机制。在此基础上，给出进程的创建、终止、阻塞、唤醒、挂起与激活等函数原型及函数代码。注意，对于过于复杂的功能或你无法解决的细节可采用指定功能的函数模块如处理机调度scheduler()来替代。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR -1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">process</span></span></span><br><span class="line"><span class="class"> &#123;</span></span><br><span class="line"> <span class="keyword">pid_t</span> pid;<span class="comment">//进程pid</span></span><br><span class="line"><span class="keyword">pid_t</span> ppid;<span class="comment">//父进程pid</span></span><br><span class="line"> <span class="keyword">enum</span> status&#123;<span class="comment">//进程状态</span></span><br><span class="line"> CREATING,<span class="comment">//创建</span></span><br><span class="line"> TERMINATING,<span class="comment">//终止</span></span><br><span class="line"> RUNNING,<span class="comment">//执行</span></span><br><span class="line"> ACTIVE_READY,<span class="comment">//活动就绪</span></span><br><span class="line"> INACTIVE_READY,<span class="comment">//静止就绪</span></span><br><span class="line"> ACTIVE_BLOCK,<span class="comment">//活动阻塞</span></span><br><span class="line"> INACTIVE_BLOCK,<span class="comment">//静止阻塞</span></span><br><span class="line">&#125;;<span class="comment">//进程的状态</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> memory_address;<span class="comment">//进程下一次执行程序的开始地址</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">allocate_address</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TO-DO: 为新的进程分配一块内存空间，返回首地址的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deallocate_address</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TO-DO: 解除进程的内存分配</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> process(<span class="keyword">pid_t</span> pid, <span class="keyword">pid_t</span> ppid) &#123;</span><br><span class="line"> <span class="keyword">this</span>.pid = pid;</span><br><span class="line"> <span class="keyword">this</span>.ppid = ppid;</span><br><span class="line"> <span class="keyword">this</span>.status = CREATING;</span><br><span class="line"> <span class="keyword">if</span> (<span class="keyword">this</span>.pid != ERROR)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">this</span>.memory_address = allocate_address();</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> ~process()&#123;</span><br><span class="line"> <span class="keyword">this</span>.status = TERMINATING;</span><br><span class="line"> deallocate_address();</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">system</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">pid_t</span> start_pid = <span class="number">0</span>;<span class="comment">//初始进程的pid</span></span><br><span class="line"><span class="keyword">pid_t</span> next_pid;<span class="comment">//下一个创建的的进程pid</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">process</span> <span class="title">running_porcess</span>;</span><span class="comment">//正在执行的进程</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">running_start_time</span>;</span><span class="comment">//正在执行进程开始执行的时间</span></span><br><span class="line"><span class="keyword">long</span> max_time = <span class="number">100</span>;<span class="comment">//一个时间片的长度（微秒）</span></span><br><span class="line"><span class="built_in">queue</span>&lt;struct process&gt; ready_queue;<span class="comment">//就绪进程的队列</span></span><br><span class="line"><span class="built_in">queue</span>&lt;struct process&gt; block_queue;<span class="comment">//阻塞进程的队列</span></span><br><span class="line"><span class="built_in">queue</span>&lt;struct process&gt; suspend_queue;<span class="comment">//挂起进程的的队列</span></span><br><span class="line"><span class="keyword">int</span> genearl_register[<span class="number">4</span>][<span class="number">2</span>];<span class="comment">//标准寄存器</span></span><br><span class="line"><span class="keyword">int</span> PSW[<span class="number">16</span>];<span class="comment">//状态寄存器</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span> system&#123;<span class="comment">//状态转移</span></span><br><span class="line"> CREATE,<span class="comment">//创建</span></span><br><span class="line"> BLOCK,<span class="comment">//阻塞</span></span><br><span class="line"> RELEASE,<span class="comment">//释放</span></span><br><span class="line"> SUSPEND,<span class="comment">//挂起</span></span><br><span class="line"> ACTIVATE,<span class="comment">//激活</span></span><br><span class="line"> TERMINATE,<span class="comment">//终止</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; operater_queue;<span class="comment">//待执行的操作的队列</span></span><br><span class="line"></span><br><span class="line"><span class="function">struct process <span class="title">create</span><span class="params">(<span class="keyword">pid_t</span> ppid)</span></span>;<span class="comment">//创建进程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">block</span><span class="params">()</span></span>;<span class="comment">//阻塞正在执行的进程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">release</span><span class="params">(struct process)</span></span>;<span class="comment">//释放阻塞的进程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">suspend</span><span class="params">(struct process)</span></span>;<span class="comment">//挂起进程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">activate</span><span class="params">(struct process)</span></span>;<span class="comment">//激活被挂起的进程</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">terminate</span><span class="params">(struct process)</span></span>;<span class="comment">//终止进程</span></span><br><span class="line"></span><br><span class="line">system();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">process</span> <span class="title">system</span>:</span>:create(<span class="keyword">pid_t</span> ppid) &#123;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">new_process = process(<span class="keyword">this</span>.next_pid , ppid);</span><br><span class="line"><span class="keyword">this</span>.next_pid += <span class="number">1</span>;</span><br><span class="line">new_process.status = ACTIVE_READY;</span><br><span class="line"><span class="keyword">this</span>.ready_queue.push(new_process);</span><br><span class="line"><span class="keyword">this</span>.timeval = gettiemofday();</span><br><span class="line"><span class="keyword">return</span> new_process;</span><br><span class="line"><span class="keyword">catch</span>:</span><br><span class="line"><span class="keyword">return</span> process(ERROR, ERROR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> system::block() &#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess.memory_address = getNowAddress();</span><br><span class="line"><span class="comment">// 阻塞执行进程，调度下一个进程</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.running_porcess != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess.status = ACTIVE_BLOCK;</span><br><span class="line">block_queue.push(<span class="keyword">this</span>.running_porcess);</span><br><span class="line"><span class="keyword">this</span>.running_porcess = <span class="keyword">this</span>.ready_queue.pop():</span><br><span class="line">&#125;</span><br><span class="line">scheduler();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> system::release(struct process) &#123;</span><br><span class="line"><span class="comment">// 释放活动阻塞进程，转入活动就绪</span></span><br><span class="line"><span class="keyword">if</span> (process.status == ACTIVE_BLOCK)</span><br><span class="line">&#123;</span><br><span class="line">process.status = ACTIVE_READY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 释放静止阻塞进程，转入静止就绪</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (process.status == INACTIVE_BLOCK)</span><br><span class="line">&#123;</span><br><span class="line">process.status == INACTIVE_READY;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">ready_queue.push(process);</span><br><span class="line">block_queue.pop(process);</span><br><span class="line">scheduler();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> system::suspend(struct process) &#123;</span><br><span class="line">porcess.memory_address = getNowAddress();</span><br><span class="line"><span class="comment">// 挂起执行进程，转入静止就绪，调度下一个程序</span></span><br><span class="line"><span class="keyword">if</span> (process == <span class="keyword">this</span>.running_porcess) &#123;</span><br><span class="line">process.status = INACTIVE_READY;</span><br><span class="line">next_process = ready_queue.pop();</span><br><span class="line"><span class="keyword">if</span> (! suspend_queue.isMember(new_process))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess = new_process;</span><br><span class="line">exec_from(new_process.memory_address);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 挂起活动就绪进程，转入静止就绪</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ready_queue.isMember(process))</span><br><span class="line">&#123;</span><br><span class="line">process.status = INACTIVE_READY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 挂起活动阻塞进程，转入静止阻塞</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (block_queue.isMember(process)) &#123;</span><br><span class="line">process.status = INACTIVE_BLOCK;</span><br><span class="line">&#125;</span><br><span class="line">suspend_queue.push(process);</span><br><span class="line">scheduler();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> system::activate(struct process) &#123;</span><br><span class="line"><span class="comment">// 如果是就绪进程，转入活动就绪</span></span><br><span class="line"><span class="keyword">if</span> (ready_queue.isMember(process))</span><br><span class="line">&#123;</span><br><span class="line">process.status == ACTIVE_READY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果是阻塞进程，转入活动阻塞</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (block_queue.isMember(process))</span><br><span class="line">&#123;</span><br><span class="line">process.status == ACTIVE_BLOCK;</span><br><span class="line">&#125;</span><br><span class="line">suspend_queue.pop(process);</span><br><span class="line">scheduler();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> system::terminate(struct process) &#123;</span><br><span class="line"><span class="comment">// 调用该进程的析构函数，并调度下一个进程</span></span><br><span class="line">process.~process();</span><br><span class="line"><span class="keyword">this</span>.next_process = ready_queue.pop();</span><br><span class="line"><span class="keyword">if</span> (! suspend_queue.isMember(new_process))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess = new_process;</span><br><span class="line">exec_from(new_process.memory_address);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">system::system() &#123;</span><br><span class="line"><span class="keyword">this</span>.next_pid = <span class="keyword">this</span>.start_pid;</span><br><span class="line">ready_queue = <span class="built_in">queue</span>&lt;struct process&gt;();</span><br><span class="line">block_queue = <span class="built_in">queue</span>&lt;struct process&gt;();</span><br><span class="line">suspend_queue = <span class="built_in">queue</span>&lt;struct process&gt;();</span><br><span class="line"><span class="comment">//初始化状态转移队列，并将系统启动时必要的一些状态转移入列</span></span><br><span class="line">operater_queue = <span class="built_in">queue</span>&lt;strct process&gt;(<span class="comment">/*TO-DO: 一些状态转移*/</span>);</span><br><span class="line"><span class="comment">// 创建第一个进程</span></span><br><span class="line"><span class="keyword">while</span>((<span class="keyword">this</span>.running_porcess = <span class="keyword">this</span>.create(<span class="keyword">this</span>.start_pid).pid != ERROR);</span><br><span class="line"><span class="keyword">this</span>.timeval = gettiemofday();</span><br><span class="line"><span class="keyword">this</span>.running_porcess.status = RUNNING;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">// 选择下一个状态转移</span></span><br><span class="line"><span class="keyword">if</span> ( !operater_queue.isEmpty() )</span><br><span class="line">&#123;</span><br><span class="line">operater = operater_queue.pop();</span><br><span class="line"><span class="keyword">switch</span> operater &#123;</span><br><span class="line">CREATE: <span class="keyword">this</span>.create(<span class="keyword">this</span>.running_porcess.pid);<span class="keyword">break</span>;</span><br><span class="line">BLOCK: <span class="keyword">this</span>.block();<span class="keyword">break</span>;</span><br><span class="line">RELEASE: <span class="keyword">this</span>.release();<span class="keyword">break</span>;</span><br><span class="line">SUSPEND: <span class="keyword">this</span>.suspend(process);<span class="keyword">break</span>;</span><br><span class="line">ACTIVATE: <span class="keyword">this</span>.activate();<span class="keyword">break</span>;</span><br><span class="line">TERMINATE: <span class="keyword">this</span>.terminate();<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//时间片结束，当前进程转移到活动就绪，并调度下一个进程</span></span><br><span class="line"><span class="keyword">if</span> (gettiemofday - <span class="keyword">this</span>.timeval &gt;= <span class="keyword">this</span>.max_time <span class="keyword">or</span> <span class="keyword">this</span>.running_porcess == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess.memory_address = getNowAddress();</span><br><span class="line"><span class="keyword">this</span>.running_porcess.status = ACTIVE_READY;</span><br><span class="line">ready_queue.push(<span class="keyword">this</span>.running_porcess);</span><br><span class="line">next_process = ready_queue.pop();</span><br><span class="line"><span class="keyword">if</span> (! suspend_queue.isMember(new_process))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.running_porcess = new_process;</span><br><span class="line">exec_from(new_process.memory_address);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个作业差点要手写，倒腾了一晚上，肯定还有很多问题，就先贴在这里吧。&lt;/p&gt;
&lt;p&gt;2.5 试根据你自己的理解，采用类C语言设计和描述操作系统关于进程控制块的数据结构、组织方式及管理机制。在此基础上，给出进程的创建、终止、阻塞、唤醒、挂起与激活等函数原型及函数代码。注意，对
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>每天都写点算法18-4</title>
    <link href="http://wang22ti.com/2018/04/02/%E6%AF%8F%E5%A4%A9%E9%83%BD%E5%86%99%E7%82%B9%E7%AE%97%E6%B3%9518-4/"/>
    <id>http://wang22ti.com/2018/04/02/每天都写点算法18-4/</id>
    <published>2018-04-02T04:39:16.000Z</published>
    <updated>2018-04-02T16:13:52.995Z</updated>
    
    <content type="html"><![CDATA[<h1 id="18-4-2"><a href="#18-4-2" class="headerlink" title="18-4-2"></a>18-4-2</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给一个很长的数字串S：123456891011121314…，</span></span><br><span class="line"><span class="comment">// 它是由所有的自然数从小到大依次排列起来的。</span></span><br><span class="line"><span class="comment">// 任意给一个数字串S1(其长度不大于10)，求出S1在S中第一次出现的位置。</span></span><br><span class="line"><span class="comment">// 比如：输入101，输出为10。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// string::substr(i, n)表示从i开始的、长度为n的子串</span></span><br><span class="line"><span class="comment">// 将string转为int需要先通过string::c_str()将其转换为C语言字符串，再使用atoi()函数</span></span><br><span class="line"><span class="comment">// string::to_string()可以将数字类型的变量转为string</span></span><br><span class="line"><span class="comment">// 要注意返回值类型与定义类型相同，不能留下python后遗症</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FirstSubstrInNumstr</span><span class="params">(<span class="built_in">string</span> S1)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 按照匹配位数枚举</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> len = <span class="number">1</span>; len &lt;= S1.length(); ++len) &#123;</span><br><span class="line"><span class="comment">// 按照前缀长度枚举</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> first_len = <span class="number">1</span>; first_len &lt;= len; ++first_len) &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断前缀</span></span><br><span class="line"><span class="built_in">string</span> before = S1.substr(<span class="number">0</span>, first_len);</span><br><span class="line"><span class="built_in">string</span> after = S1.substr(first_len, len);</span><br><span class="line"><span class="keyword">int</span> n_before = atoi(before.c_str());</span><br><span class="line"><span class="keyword">int</span> n_after = atoi(after.c_str()) % <span class="keyword">int</span>(<span class="built_in">pow</span>(<span class="number">10</span>, first_len));</span><br><span class="line"><span class="keyword">int</span> out = atoi(after.c_str()) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> ((n_before + <span class="number">1</span>) % <span class="keyword">int</span>(<span class="built_in">pow</span>(<span class="number">10</span>, first_len)) != n_after) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断中部</span></span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line"><span class="keyword">int</span> tag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>, before = after; first_len + len * ( k + <span class="number">1</span>) - <span class="number">1</span> &lt; S1.length(); ++k, before = after) &#123;</span><br><span class="line">after = S1.substr(first_len + len * k, len);</span><br><span class="line">n_before = atoi(before.c_str());</span><br><span class="line">n_after = atoi(after.c_str());</span><br><span class="line"><span class="keyword">if</span> (n_before + <span class="number">1</span> != n_after) &#123;</span><br><span class="line">tag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tag == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断后缀</span></span><br><span class="line">before = to_string(<span class="keyword">int</span>(atoi(after.c_str()) + <span class="number">1</span>));</span><br><span class="line">after = S1.substr(first_len + len * k);</span><br><span class="line"><span class="keyword">if</span> (before.substr(<span class="number">0</span>, after.length()) != after) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 均不匹配，返回S1对应的int</span></span><br><span class="line"><span class="keyword">return</span> atoi(S1.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> s1 = <span class="string">"910111213"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; FirstSubstrInNumstr(s1) &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="18-4-1"><a href="#18-4-1" class="headerlink" title="18-4-1"></a>18-4-1</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Narcissus数则特指一个n位数中各数字的n次幂之和等于自身的数。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 暴力枚举的关键在于选定枚举的角度</span></span><br><span class="line"><span class="comment">// 对于等式而言，就是选择左边还右边，还可以通过移项减少复杂度</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printNarcissus1</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; ++k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i * <span class="number">100</span> + j * <span class="number">10</span> + k == <span class="built_in">pow</span>(i, <span class="number">3</span>) + <span class="built_in">pow</span>(j, <span class="number">3</span>) + <span class="built_in">pow</span>(k, <span class="number">3</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; i * <span class="number">100</span> + j * <span class="number">10</span> + k &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printNarcissus2</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">pow</span>(<span class="number">10</span>, n - <span class="number">1</span>); i &lt; <span class="built_in">pow</span>(<span class="number">10</span>, n); ++i)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="keyword">int</span> num = i;</span><br><span class="line"> <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line"> &#123;</span><br><span class="line"> sum += <span class="built_in">pow</span>(num % <span class="number">10</span>, n);</span><br><span class="line"> num /= <span class="number">10</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (sum == i)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">printNarcissus1();</span><br><span class="line">printNarcissus2(<span class="number">4</span>); </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 我国古代数学家张丘建在《算经》中出了一道题</span></span><br><span class="line"><span class="comment">// “鸡翁一，值钱五；鸡母一，值钱三；鸡雏三，值钱一。百钱买百鸡，问鸡翁、鸡母、鸡雏各几何？”，</span></span><br><span class="line"><span class="comment">// 现在假定各鸡种的价格不变，拥有的钱数为m，需要购买的鸡数为n，试求出所有可能的购买方案总数。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mMoneynChicken</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> num_plan = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> num_rooster = <span class="number">0</span>; num_rooster &lt;= m / <span class="number">5</span>; ++num_rooster)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> num_hen = <span class="number">0</span>; num_hen &lt;= (m - <span class="number">5</span> * num_rooster) / <span class="number">3</span>; ++num_hen)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> money_chick = <span class="number">0</span>; ; ++money_chick)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">5</span> * num_rooster + <span class="number">3</span> * num_hen + money_chick) &#123;</span><br><span class="line"><span class="keyword">if</span> (num_rooster + num_hen + money_chick * <span class="number">3</span> == n) &#123;</span><br><span class="line">num_plan += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num_plan;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; mMoneynChicken(<span class="number">10</span>, <span class="number">3</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="18-3-31"><a href="#18-3-31" class="headerlink" title="18-3-31"></a>18-3-31</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//试求解输入数组的连续子序列和的最大值。如果所有的整数都是负数，那么最大连续子数列和为0。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 三重循环</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubSum1</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.size(); ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; a.size(); ++j) &#123;</span><br><span class="line">            <span class="keyword">int</span> thisSum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = i; k &lt;= j; ++k) &#123;</span><br><span class="line">                thisSum += a[k];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (thisSum &gt; maxSum) &#123;</span><br><span class="line">                maxSum = thisSum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二重循环</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubSum2</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.size(); ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> thisSum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; a.size(); ++j) &#123;</span><br><span class="line">            thisSum += a[j];</span><br><span class="line">            <span class="keyword">if</span> (thisSum &gt; maxSum) &#123;</span><br><span class="line">                maxSum = thisSum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 一重循环，最优</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubSum3</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxSum = <span class="number">0</span>, nowSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.size(); ++i) &#123;</span><br><span class="line">        nowSum += a[i];</span><br><span class="line"><span class="comment">//      抛弃小于0的前缀</span></span><br><span class="line">        <span class="keyword">if</span> (nowSum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            nowSum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (nowSum &gt; maxSum) &#123;</span><br><span class="line">            maxSum = nowSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> maxSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxSubSumRec</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;a, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 先讨论非递归情况</span></span><br><span class="line">    <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[left] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> a[left];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> center = (left + right) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> maxLeftSum = maxSubSumRec(a, left, center);</span><br><span class="line">    <span class="keyword">int</span> maxRightSum = maxSubSumRec(a, center + <span class="number">1</span>, right);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nowRightBorderSum = <span class="number">0</span>, maxRightBorderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 精髓在于认识到关键词不仅在于最大，还在于连续</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = center + <span class="number">1</span>; i &lt;= right; ++i) &#123;</span><br><span class="line">        nowRightBorderSum += a[i];</span><br><span class="line">        <span class="keyword">if</span> (nowRightBorderSum &gt; maxRightBorderSum) &#123;</span><br><span class="line">            maxRightBorderSum = nowRightBorderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> nowLeftBorderSum = <span class="number">0</span>, maxLeftBorderSum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = center; j &gt;= left; --j) &#123;</span><br><span class="line">        nowLeftBorderSum += a[j];</span><br><span class="line">        <span class="keyword">if</span> (nowLeftBorderSum &gt; maxLeftBorderSum) &#123;</span><br><span class="line">            maxLeftBorderSum = nowLeftBorderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> max(maxRightBorderSum + maxLeftBorderSum, max(maxLeftSum, maxRightSum));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a = &#123;<span class="number">-2</span>, <span class="number">4</span>, <span class="number">10</span>, <span class="number">-1</span>, <span class="number">2</span>&#125;;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxSubSum1(a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxSubSum2(a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxSubSum3(a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; maxSubSumRec(a, <span class="number">0</span>, a.size()) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;18-4-2&quot;&gt;&lt;a href=&quot;#18-4-2&quot; class=&quot;headerlink&quot; title=&quot;18-4-2&quot;&gt;&lt;/a&gt;18-4-2&lt;/h1&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>日记18-4</title>
    <link href="http://wang22ti.com/2018/04/01/%E6%97%A5%E8%AE%B018-4/"/>
    <id>http://wang22ti.com/2018/04/01/日记18-4/</id>
    <published>2018-04-01T13:23:32.000Z</published>
    <updated>2018-04-02T16:12:07.914Z</updated>
    
    <content type="html"><![CDATA[<h1 id="18-4-1"><a href="#18-4-1" class="headerlink" title="18-4-1"></a>18-4-1</h1><p>上午很无奈地回绝了徐老师的邀请。</p><p>下午似乎没有干啥就过去了。。操作系统作业2-5贼复杂。</p><p>晚上去听庆岩的算法讲座，发现高中算法竞赛的内容真是重要。</p><p>熬夜把操作系统作业2.5搞定了</p><h1 id="18-4-2"><a href="#18-4-2" class="headerlink" title="18-4-2"></a>18-4-2</h1><p>论文的进度变为预审了，清明把另一篇写好吧。</p><p>上午终于把时清手机的事情处理了，啊，貌似没听课，GG。</p><p>中午开班长支书会，关于支部评定。。</p><p>晚上开了党支部学习会，补了一些材料。。</p><p>其余的时间好不容易写了一题acm，主要好久没写C++啦</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;18-4-1&quot;&gt;&lt;a href=&quot;#18-4-1&quot; class=&quot;headerlink&quot; title=&quot;18-4-1&quot;&gt;&lt;/a&gt;18-4-1&lt;/h1&gt;&lt;p&gt;上午很无奈地回绝了徐老师的邀请。&lt;/p&gt;
&lt;p&gt;下午似乎没有干啥就过去了。。操作系统作业2-5贼复杂。&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《操作系统》实验2-进程控制</title>
    <link href="http://wang22ti.com/2018/03/30/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B%E5%AE%9E%E9%AA%8C2-%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    <id>http://wang22ti.com/2018/03/30/《操作系统》实验2-进程控制/</id>
    <published>2018-03-30T03:04:08.000Z</published>
    <updated>2018-03-30T03:27:09.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p><strong>打开一个vi进程。通过ps命令以及选择合适的参数，只显示名字为vi的进程。寻找vi进程的父进程，直到init进程为止。记录过程中所有进程的ID和父进程ID。将得到的进程树和由pstree命令的得到的进程树进行比较。</strong></p><p>解：pgrep 是通过程序的名字来查询进程的工具，一般是用来判断程序是否正在运行；xargs能够捕获一个命令的输出，然后传递给另外一个命令。通过两个命令的配合，完成了显示名字为vi的进程的输出，并通过ps命令一步一步找到父进程。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image1.png" alt="mage"></p><p>通过pstree命令得到以下的进程树：</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image2.png" alt="mage"> </p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image3.png" alt="mage"></p><p>比对两种方法获得的父进程，发现均为systemd→lightdm→upstart→gnome-terminal→bash→vi。其中，systemd是一组系统管理命令，取代了init命令成为系统的第一个进程；LightDM即Light Display Manager，是一个全新的、轻量的Linux桌面的桌面显示管理器；有趣的是，upstart是一种基于事件通知机制启动相应服务的init进程，即较早版本的Ubuntu的初始化进程为init→upstart；gnome-terminal为终端的管理进程；bash是其中一套shell规范（类似于Ubuntu和Linux的关系），而shell是一套linux接口。</p><h1 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h1><p><strong>编写程序，使用getpid、getppid系统调用，输出当前进程的ID以及父进程的ID。</strong></p><p>解：编写程序及其输入结果如下，不做赘述。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image4.png" alt="mage"></p><h1 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h1><p><strong>编写程序，首先使用fork系统调用，创建子进程。在父进程中继续执行空循环操作；在子进程中调用exec编辑器。然后在另外一个终端中，通过ps –Al命令、ps aux命令，查看vi进程及其父进程的运行状态，理解每个参数所表达的意义。选择合适的命令参数，对所有进程按照cpu占用率排序。</strong></p><p>解：根据题目要求，编写程序如下，并使用命令ps -AL查看现有进程信息。查阅资料可知，</p><p>#F代表程序的旗标(flag)，4代表使用者为 superuser，1代表user；</p><p>#S代表这个程序的状态 (STAT)；</p><p>#UID代表执行者身份；</p><p>#PID代表进程的ID号</p><p>#PPID代表父进程的ID；</p><p>#C代表使用的CPU资源百分比；</p><p>#PRI代表进程的执行优先权(Priority的简写)，其值越小越早被执行；</p><p>#NI代表进程的nice值，其表示进程可被执行的优先级的修正数值；</p><p>#ADDR代表内核函数； </p><p>#SZ表示占用内存的大小；</p><p>#WCHAN表示这个程序是否正在运作当中，其中’ -’表示正在运作；</p><p>#TTY表示登入者的终端机位置；</p><p>#TIME表示使用掉的 CPU 时间；</p><p>#CMD 表示下达指令的名称；</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image5.png" alt="mage"></p><p>在右下角的中找到vi进程及其状态：</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image6.png" alt="mage"></p><p>使用命令ps aux查看内存中运行的程序，查阅资料可知：</p><p>• USER：该进程属于的使用者账号；</p><p>• PID：该进程的进程ID号；</p><p>• CPU：该进程使用掉的CPU资源百分比；</p><p>• MEM：该进程所占用的物理内存百分比；</p><p>• VSZ：该进程使用掉的虚拟内存量 (Kbytes)</p><p>• RSS ：该进程占用的固定的内存量 (Kbytes)</p><p>• TTY ：该进程是在那个终端机上面运作，若与终端机无关，则显示 ?，另外， tty1-tty6 是本机上面的登入者程序，若为 pts/0 等等的，则表示为由网络连接进主机的程序。</p><p>• STAT：该程序目前的状态，主要的状态有：</p><p>   R ：该程序目前正在运作，或者是可被运作；</p><p>   S ：该程序目前正在睡眠当中；</p><p>   T ：该程序目前正在侦测或者是停止了；</p><p>   Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie(疆尸) 程序的状态；</p><p>• START：该进程被触发启动的时间；</p><p>• TIME ：该进程实际使用 CPU 运作的时间。</p><p>• COMMAND：该进程所属的指令</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image7.png" alt="mage"></p><p>​       使用top命令将所有进程按照cpu占有率排名，可见死循环程序fork_exec已经几乎完全占有了CPU：</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image8.png" alt="mage"></p><h1 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h1><p><strong>使用fork系统调用，创建如下进程树，并使每个进程输出自己的ID和父进程的ID。观察进程的执行顺序。</strong></p><p>解：根据题目要求编写程序，多次运行得到如下输出。可以看出P1为P2和P3的父进程，P2位P4和P5的父进程，与实验要求的进程树相同。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image9.png" alt="mage"></p><h1 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h1><p><strong>修改上述进程树中的进程，使得所有进程都循环输出自己的ID和父进程的ID。然后终止p2进程(kill或者自动退出)，观察p1、p3、p4、p5进程的运行状态和其他相关参数有何改变。</strong></p><p>解：由于需要循环输出自己的ID和父进程的ID，所以程序逻辑发生变化，重新编写程序并运行如下。5个程序并发执行，前后并无固定的顺序，但是进程ID及其父进程ID始终满足题目进程树的要求。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image10.png" alt="mage1"></p><p>​       修改程序如下，P2只循环输出3次。观察到从第4轮输出开始除了P2没有继续输出外，其他进程仍然满足题目要求的进程树。这和我预计的结果并不一样，所以猜测可能进程P2并没有结束。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image11.png" alt="mage1"></p><p>​       进一步修改程序如下，P2在3次输出之后执行return语句，惊奇地发现P2的子进程P4和P5的父进程均变为了1537！可见此前的程序并没有结束进程P2。使用ps命令，发现该进程名为upstart，它负责收养孤儿进程，其父进程就是ubuntu图形化界面的进程lightdm。这意味着在文本界面下，一切都和upstart无关了。</p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image12.png" alt="mage1"></p><p><img src="/2018/03/30/《操作系统》实验2-进程控制/image13.png" alt="mage1"></p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] linux pgrep命令的使用 </p><p><a href="https://blog.csdn.net/edman_linux/article/details/78722021" target="_blank" rel="noopener">https://blog.csdn.net/edman_linux/article/details/78722021</a></p><p>[2] Linux xargs命令小结</p><p><a href="https://blog.csdn.net/wh_19910525/article/details/8494444" target="_blank" rel="noopener">https://blog.csdn.net/wh_19910525/article/details/8494444</a></p><p>[3] Systemd 入门教程：命令篇</p><p><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html</a></p><p>[4] 百度百科：LightDM</p><p><a href="https://baike.baidu.com/item/LightDM/9557430?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/LightDM/9557430?fr=aladdin</a></p><p>[5] linux第一个用户进程init—upstart</p><p><a href="https://blog.csdn.net/itsenlin/article/details/42329851" target="_blank" rel="noopener">https://blog.csdn.net/itsenlin/article/details/42329851</a></p><p>[6] 知乎：想了解一下ubuntu下的终端，shell，bash是什么以及区别？</p><p><a href="https://www.zhihu.com/question/40448945" target="_blank" rel="noopener">https://www.zhihu.com/question/40448945</a></p><p>[7] Linux ps命令详解与示例说明</p><p><a href="https://blog.csdn.net/lsbhjshyn/article/details/18549869" target="_blank" rel="noopener">https://blog.csdn.net/lsbhjshyn/article/details/18549869</a></p><p>[8] Ubuntu15.04 删除/sbin/upstart与孤儿进程收养的问题</p><p><a href="https://www.cnblogs.com/chilumanxi/p/5136102.html" target="_blank" rel="noopener">https://www.cnblogs.com/chilumanxi/p/5136102.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一&quot;&gt;&lt;a href=&quot;#一&quot; class=&quot;headerlink&quot; title=&quot;一&quot;&gt;&lt;/a&gt;一&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;打开一个vi进程。通过ps命令以及选择合适的参数，只显示名字为vi的进程。寻找vi进程的父进程，直到init进程为止。记录过程中所有
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《计算机体系结构》实验1-计算机性能测试</title>
    <link href="http://wang22ti.com/2018/03/29/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E3%80%8B%E5%AE%9E%E9%AA%8C1-%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://wang22ti.com/2018/03/29/《计算机体系结构》实验1-计算机性能测试/</id>
    <published>2018-03-28T17:04:40.000Z</published>
    <updated>2018-03-30T03:28:01.493Z</updated>
    
    <content type="html"><![CDATA[<p>#背景介绍</p><p>本次实验中，我共计采用5种方式（4个成熟的测试软件和1个自己写的小程序）对3台计算机（期间对联想小新V4000进行固态的改装升级）进行了全方位的测试，具体方案如下表所示：</p><table><thead><tr><th></th><th><strong>MIIX 5Pro</strong></th><th><strong>小新V4000</strong>  <strong>（改装固态）</strong></th><th><strong>小新V4000</strong>  <strong>（未改装）</strong></th><th><strong>方正</strong>  <strong>Wenxiang E620</strong></th></tr></thead><tbody><tr><td><strong>鲁大师</strong></td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td><strong>CrystalDisk</strong></td><td>√</td><td>√</td><td>×</td><td>×</td></tr><tr><td><strong>CPU-Z</strong></td><td>√</td><td>√</td><td>×</td><td>×</td></tr><tr><td><strong>Performance Test 9</strong></td><td>√</td><td>√</td><td>×</td><td>×</td></tr><tr><td><strong>My benchmark</strong></td><td>√</td><td>√</td><td>×</td><td>×</td></tr></tbody></table><p>​        此外，根据鲁大师、CPU-Z的检测结果，3台计算机主要的软硬件配置如下表所示：</p><p> <img src="/2018/03/29/《计算机体系结构》实验1-计算机性能测试/1.png" alt="1"></p><p>#测试过程与结果分析</p><p>##鲁大师磁盘测试</p><p>鲁大师磁盘检测的健康程度取决于访问该存储单元的响应时间。小于三毫秒为优秀，小于12毫秒为良好，是小于20毫秒为正常，小于120毫秒为瑕疵，小于600毫秒为丢失，大于600毫秒为严重，无法读取为损坏。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">优良</th><th style="text-align:center">良好</th><th style="text-align:center">正常</th><th style="text-align:center">瑕疵</th><th style="text-align:center">丢失</th></tr></thead><tbody><tr><td style="text-align:center">方正</td><td style="text-align:center"><strong>1779866</strong></td><td style="text-align:center"><strong>69891</strong></td><td style="text-align:center"><strong>20114</strong></td><td style="text-align:center"><strong>12976</strong></td><td style="text-align:center"><strong>712</strong></td></tr><tr><td style="text-align:center">小新_旧</td><td style="text-align:center"><strong>2185385</strong></td><td style="text-align:center"><strong>275919</strong></td><td style="text-align:center"><strong>11963</strong></td><td style="text-align:center"><strong>37386</strong></td><td style="text-align:center"><strong>1750</strong></td></tr><tr><td style="text-align:center">小新_新</td><td style="text-align:center"><strong>951431</strong></td><td style="text-align:center"><strong>9</strong></td><td style="text-align:center"><strong>0</strong></td><td style="text-align:center"><strong>0</strong></td><td style="text-align:center"><strong>0</strong></td></tr><tr><td style="text-align:center">MIIX</td><td style="text-align:center"><strong>1953524</strong></td><td style="text-align:center"><strong>6</strong></td><td style="text-align:center"><strong>0</strong></td><td style="text-align:center"><strong>0</strong></td><td style="text-align:center"><strong>0</strong></td></tr></tbody></table><p>从上表的测试结果可以看出，在经过一段时间的使用后，机械硬盘具有明显的损耗，小部分存储单元延迟较长；而固态硬盘，具有良好的稳定性，在一段时间的使用之后仍然保持优良的健康状态。</p><p>##鲁大师性能测试</p><p>鲁大师的计算机性能测试，包括处理器、显卡、内存和硬盘。总分是根据各个属性加权求和得到。</p><table><thead><tr><th></th><th>总分</th><th>处理器</th><th>显卡</th><th>内存</th><th>硬盘</th></tr></thead><tbody><tr><td>方正</td><td><strong>58240</strong></td><td><strong>46696</strong></td><td><strong>3651</strong></td><td><strong>6963</strong></td><td><strong>930</strong></td></tr><tr><td>小新_旧</td><td><strong>70953</strong></td><td><strong>32486</strong></td><td><strong>28744</strong></td><td><strong>8223</strong></td><td><strong>1500</strong></td></tr><tr><td>小新_新</td><td><strong>96665</strong></td><td><strong>32728</strong></td><td><strong>26217</strong></td><td><strong>8223</strong></td><td><strong>10860</strong></td></tr><tr><td>MIIX</td><td><strong>126353</strong></td><td><strong>39076</strong></td><td><strong>11722</strong></td><td><strong>9006</strong></td><td><strong>42960</strong></td></tr></tbody></table><p>通过分析上表数据，可以得到一些结论：</p><p>越新的计算机测试总分越高，这符合计算机发展的常识与我日常使用的体验；</p><p>近几代英特尔处理器升级幅度并不是很大；</p><p>得益于较大的功率，桌面级处理器相较于笔记本级处理器具有较大优势；</p><p>独立显卡具有碾压于核心显卡的处理能力，不过近几年核心显卡有了较大的发展；</p><p>近几年内存升级幅度并不是很大；</p><p>固态硬盘具有碾压机械硬盘的传输速度。</p><p>##CrystalDisk</p><p>​      CrystalDisk测试主要包括硬盘的顺序读写、4k读写，其中比较容易理解的顺序读写结果如下：</p><table><thead><tr><th></th><th><strong>Read(MB/s)</strong></th><th><strong>Write(MB/s)</strong></th></tr></thead><tbody><tr><td>小新_新</td><td><strong>561.9</strong></td><td><strong>305.5</strong></td></tr><tr><td>MIIX</td><td><strong>2041.2</strong></td><td><strong>1588.4</strong></td></tr></tbody></table><p>可以看出，固态硬盘之间也有较大差距。查阅相关资料可知，这主要取决于固态硬盘的闪存颗粒、主控芯片以及接口规格。不过从实际体验来看，SATA3固态硬盘的500MB/s读取速度与300MB/s写入速度已经满足了日常的基本需求，实际体验没有太大的差别。</p><p>##CPU-Z</p><p>​        CPU-Z测试主要包括处理器的单核性能和多核性能。</p><table><thead><tr><th></th><th><strong>单核</strong></th><th><strong>多核</strong></th></tr></thead><tbody><tr><td><strong>小新_新</strong></td><td><strong>322.7</strong></td><td><strong>895.3</strong></td></tr><tr><td><strong>MIIX</strong></td><td><strong>344.2</strong></td><td><strong>1002.7</strong></td></tr></tbody></table><p>从上表可知，虽然代数相差两代，但是i7 7500U相较于i7 5500U并没有显著的提升。两款CPU的功耗、工艺、核心数量、线程数量制成完全相同，区别主要在于架构和主频。单从处理性能来看，英特尔牙膏厂的称号名副其实，可见垄断并不利于技术的进步。</p><p>##Performance Test 9</p><p>​        PerformanceTest 9测试内容主要包括CPU、2d图形、3d图形、内存和磁盘。这些属性和鲁大师的相似，2d图形和3d图形相比更看重CPU的处理能力。</p><table><thead><tr><th></th><th><strong>PassMark</strong></th><th><strong>CPU</strong></th><th><strong>2D图形</strong></th><th><strong>3D图形</strong></th><th><strong>内存</strong></th><th><strong>磁盘</strong></th></tr></thead><tbody><tr><td><strong>小新_新</strong></td><td><strong>2214.3</strong></td><td><strong>4284.8</strong></td><td><strong>617.2</strong></td><td><strong>550.9</strong></td><td><strong>1720.1</strong></td><td><strong>5443.1</strong></td></tr><tr><td><strong>MIIX</strong></td><td><strong>2186.2</strong></td><td><strong>5534.9</strong></td><td><strong>460.3</strong></td><td><strong>453.0</strong></td><td><strong>2341.8</strong></td><td><strong>19460.6</strong></td></tr></tbody></table><p>令人意外的是，上表显示比较老旧的联想小新获得了更高的总分，这一方面可能是因为硬盘在该项测试中所占权重较小，另一方面可能是因为联想小新具有更大的机身体积，故而具有较好的散热。由此可见，计算机性能测试的标准并不唯一，每一项属性所占的权重因人而异；同时，计算机的性能参数并不是决定计算机最终实际使用性能的唯一指标。</p><p>##My benchmark</p><p>​      除了使用上述的成熟软件，我还编写了以下的python3.5程序，以测试不同电脑的性能。</p><p>​        每次测试要按不同次数执行三个操作。其中，第一个操作是整数0到1000万的累加，主要考察CPU的整数加法计算能力；第二个操作是1到1万的阶乘，主要考察CPU的整数乘法计算能力；第三个操作是，对17MB纯文本文件的读写，文本内容为所有维基百科的词条，主要考察计算机的IO读写速度。四次测试中，三种操作的频数之比分别为10:10:10，28:1:1，1:28:1，1:1:28。</p><table><thead><tr><th></th><th>T1(s)</th><th>T2(s)</th><th>T3(s)</th><th>Ttotal(s)</th></tr></thead><tbody><tr><td>小新V4000</td><td></td><td></td><td></td><td></td></tr><tr><td>[10,  10, 10]</td><td>11.19</td><td>1.33</td><td>22.34</td><td>34.87</td></tr><tr><td>[28,  1, 1]</td><td>31.30</td><td>0.13</td><td>2.23</td><td>33.67</td></tr><tr><td>[1,  28, 1]</td><td>1.15</td><td>3.70</td><td>2.26</td><td>7.11</td></tr><tr><td>[1,  1, 28]</td><td>1.11</td><td>0.13</td><td>62.62</td><td>63.87</td></tr><tr><td>MIIX  5pro</td><td></td><td></td><td></td><td></td></tr><tr><td>[10,  10, 10]</td><td>10.37</td><td>1.12</td><td>6.84</td><td>28.33</td></tr><tr><td>[28,  1, 1]</td><td>28.7</td><td>0.11</td><td>1.68</td><td>30.56</td></tr><tr><td>[1,  28, 1]</td><td>1.01</td><td>3.08</td><td>1.68</td><td>5.77</td></tr><tr><td>[1,  1, 28]</td><td>1.06</td><td>0.11</td><td>47.3</td><td>48.5</td></tr></tbody></table><p>测试的结果比较符合预期，即两者在CPU的处理能力上相差不大，而MIIX在磁盘读写的能力上有明显的优势。此外，本实验中操作三在总时长中占比较大，真实应用场景中，应该对相应的操作进行优化，从而有效的提高全局加速比。</p><h1 id="购机建议"><a href="#购机建议" class="headerlink" title="购机建议"></a>购机建议</h1><p>根据上述实验结论，提出以下的购机建议：</p><p>受制于笔记本功耗与工艺制成的阻碍，低压版处理器实际性能相距不大，散热成为实际性能的瓶颈。</p><p>独立显卡具有碾压核心显卡的处理能力，有游戏、大型图像处理以及机器学习需求的用户需要购买较为高端的显卡。</p><p>硬盘的读写速度是制约当前计算机实际使用体验的重要瓶颈。在预算充足的情况下，尽量购买带有固态硬盘的计算机。</p><p>由于软件的更新升级，内存容量的大小建议8G起步。</p><p>计算机的实际使用体验不仅取决于各项性能参数，还取决于显示器键盘触控板等外设的质量、配备接口的数量与质量、实际做工以及硬件之间的配合程度，不能陷入单纯比较参数的陷阱当中，一切以实际的使用体验为准。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>本次实验中，我首先使用四种成熟的测试软件对个人的两台计算机和机房的计算机进行性能测试，然后又自己编写python程序测试个人的两台计算机性能，得到了一系列实验数据，并分析得到相关实验结论。</p><p>通过本次实验，我从总体上了解了计算机测试的各项指标，验证了课堂上所学的相关知识与课下了解的近几年计算机发展状况，同时对个人的计算机状况有了较为深入的理解，这些必将有利于我进一步的学习与实践。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#背景介绍&lt;/p&gt;
&lt;p&gt;本次实验中，我共计采用5种方式（4个成熟的测试软件和1个自己写的小程序）对3台计算机（期间对联想小新V4000进行固态的改装升级）进行了全方位的测试，具体方案如下表所示：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小团队管理概论</title>
    <link href="http://wang22ti.com/2018/03/26/%E5%B0%8F%E5%9B%A2%E9%98%9F%E7%AE%A1%E7%90%86%E6%A6%82%E8%AE%BA/"/>
    <id>http://wang22ti.com/2018/03/26/小团队管理概论/</id>
    <published>2018-03-26T15:37:51.000Z</published>
    <updated>2018-03-26T15:37:51.135Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小团队协作概论</title>
    <link href="http://wang22ti.com/2018/03/26/%E5%B0%8F%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%E6%A6%82%E8%AE%BA/"/>
    <id>http://wang22ti.com/2018/03/26/小团队协作概论/</id>
    <published>2018-03-26T15:37:43.000Z</published>
    <updated>2018-03-26T15:37:43.917Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>联想小新V4000安装固态硬盘</title>
    <link href="http://wang22ti.com/2018/03/26/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0V4000%E5%AE%89%E8%A3%85%E5%9B%BA%E6%80%81%E7%A1%AC%E7%9B%98/"/>
    <id>http://wang22ti.com/2018/03/26/联想小新V4000安装固态硬盘/</id>
    <published>2018-03-26T15:37:17.000Z</published>
    <updated>2018-03-30T15:30:43.566Z</updated>
    
    <content type="html"><![CDATA[<p>计算机体系结构第一次上机做性能检测，好吧惊讶地发现小新V4000的硬盘已经老化了不少，考虑到非优秀良好的单元虽然数量占比并不是很高但是响应时间占比却吓人，于是就考虑换一下硬盘。<img src="/2018/03/26/联想小新V4000安装固态硬盘/磁盘检测.PNG" alt=""></p><p>原来是想换联想原装的，然而悲哀的发现同等容量（200多G）同等接口（SATA3）下三星的反而更快（500对300）更便宜（可能刚好赶上秒杀？），于是就入了<a href="https://item.jd.com/6287165.html" target="_blank" rel="noopener">三星(SAMSUNG) 860 EVO 250G SATA3 固态硬盘（MZ-76E250B）</a>。</p><p>由于此前没有拆机的经历啦（愧为计算机人），所以请南门的小哥帮忙装一下（顺便观察一波）。</p><p>最后把固态安装在主硬盘，原来的机械扔在光驱上。然而小新V4000的光驱位很草率，就是一个塑料壳，根本没考虑拓展，于是又从小哥那里买了一个支架。</p><p>回来后就很愉快啦，装了Win10，发现STAT3接口的速度已经足够使用，完全不是瓶颈了。</p><p><img src="/2018/03/26/联想小新V4000安装固态硬盘/硬盘测试.png" alt=""></p><p>不过原装的希捷硬盘貌似应为工作电流较大的原因，经常掉盘。。大概只能买一个盒子当移动硬盘了。</p><p>参考资料主要有：<a href="https://club.lenovo.com.cn/thread-1881162-1-1.html" target="_blank" rel="noopener">完美解决联想小新V4000光驱位无法识别硬盘+加固态最简单教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;计算机体系结构第一次上机做性能检测，好吧惊讶地发现小新V4000的硬盘已经老化了不少，考虑到非优秀良好的单元虽然数量占比并不是很高但是响应时间占比却吓人，于是就考虑换一下硬盘。&lt;img src=&quot;/2018/03/26/联想小新V4000安装固态硬盘/磁盘检测.PNG&quot; a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>《操作系统》实验1_操作系统初步</title>
    <link href="http://wang22ti.com/2018/03/15/%E3%80%8A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B%E5%AE%9E%E9%AA%8C1-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%88%9D%E6%AD%A5/"/>
    <id>http://wang22ti.com/2018/03/15/《操作系统》实验1-操作系统初步/</id>
    <published>2018-03-15T15:49:44.000Z</published>
    <updated>2018-03-15T16:18:16.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h1><p><strong>根据以下代码完成下面的实验。</strong><br><strong>要求：</strong><br><strong>1、编译运行该程序（cpu.c），观察输出结果，说明程序功能。(编译命令： gcc -o cpu cpu.c –Wall)（执行命令：./cpu）</strong><br><strong>2、再次按下面的命令运行并观察结果。程序cpu运行了几次？他们运行的顺序有何特点和规律？你能尝试解释吗？（执行命令：./cpuA &amp; ; ./cpu B &amp; ; ./cpu C &amp; ; ./cpu D &amp;）</strong></p><p>1、 程序功能为每隔一秒输出一次参数<br>2、 我对程序稍加改造如下，将打印的结果输出到文件中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">GetTime</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">t</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc=gettimeofday(&amp;t,<span class="literal">NULL</span>);</span><br><span class="line">assert(rc==<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">double</span>)t.tv_sec+(<span class="keyword">double</span>)t.tv_usec/<span class="number">1e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spin</span><span class="params">(<span class="keyword">int</span> howlong)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> t=GetTime();</span><br><span class="line"><span class="keyword">while</span>((GetTime()-t)&lt;(<span class="keyword">double</span>)howlong);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"usage: cpu &lt;string&gt;\n"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> *str = argv[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(; j &lt; <span class="number">60</span>;j++) &#123;</span><br><span class="line">spin(<span class="number">1</span>);</span><br><span class="line">FILE *stream = fopen(<span class="string">"log.txt"</span>, <span class="string">"a"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(stream, <span class="string">"%d %s\n"</span>, i, str);</span><br><span class="line">fclose(stream);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, i++);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s\n"</span>, str);</span><br><span class="line">&#125;</span><br><span class="line">FILE *stream = fopen(<span class="string">"log.txt"</span>, <span class="string">"a"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(stream, <span class="string">"******************\n"</span>);</span><br><span class="line">fclose(stream);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终ABCD四个程序分别运行了60次，其中部分输出如下：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/1521129185256.png" alt=""><br>可见4个程序在每一轮循环中轮流执行，并没有发现特别的规律。<br>解释：对于4个完全相同的程序，CPU的优先级是相同的，因此会随机地顺序执行。<br>之后通过命令行去随机化：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/1.png" alt=""><br>以相同的方式再次运行程序，可以得到以下结果：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/2.png" alt=""><img src="/2018/03/15/《操作系统》实验1-操作系统初步/2.png" alt=""><img src="/2018/03/15/《操作系统》实验1-操作系统初步/3.png" alt=""><br>可以看到，除了第0-2循环，其他均以“DACB”的顺序打印，可见此时CPU已经不再使用之前的随机算法。</p><h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p><strong>根据以下代码完成实验。</strong><br><strong>要求：</strong><br><strong>1、阅读并编译运行该程序(mem.c)，观察输出结果，说明程序功能。(命令： gcc -o mem mem.c –Wall)</strong><br><strong>2、再次按下面的命令运行并观察结果。两个分别运行的程序分配的内存地址是否相同？是否为同一块内存区域？为什么？命令：./mem &amp;; ./mem &amp;</strong></p><p>1、 程序功能为打印指针p指向的内存地址，以及每隔一秒将指针加一后打印指针的相对地址。<br>2、 我对程序稍加改造如下，将打印的结果输出到文件中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">GetTime</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">t</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc=gettimeofday(&amp;t,<span class="literal">NULL</span>);</span><br><span class="line">assert(rc==<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>(<span class="keyword">double</span>)t.tv_sec+(<span class="keyword">double</span>)t.tv_usec/<span class="number">1e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Spin</span><span class="params">(<span class="keyword">int</span> howlong)</span></span>&#123;</span><br><span class="line"><span class="keyword">double</span> t=GetTime();</span><br><span class="line"><span class="keyword">while</span>((GetTime()-t)&lt;(<span class="keyword">double</span>)howlong);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *p = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)); <span class="comment">// a1</span></span><br><span class="line">assert(p != <span class="literal">NULL</span>);</span><br><span class="line">FILE *stream = fopen(<span class="string">"2log.txt"</span>, <span class="string">"a"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(stream, <span class="string">"(%d) address pointed to by p: %p\n"</span>,getpid(), p); <span class="comment">// a2</span></span><br><span class="line">fclose(stream);</span><br><span class="line">*p = <span class="number">0</span>; <span class="comment">// a3</span></span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> ( ; j&lt;<span class="number">10</span>; j++) &#123;</span><br><span class="line">Spin(<span class="number">1</span>);</span><br><span class="line">*p = *p + <span class="number">1</span>;</span><br><span class="line">FILE *stream = fopen(<span class="string">"2log.txt"</span>, <span class="string">"a"</span>);</span><br><span class="line"><span class="built_in">fprintf</span>(stream, <span class="string">"(%d) p: %d\n"</span>, getpid(), *p); <span class="comment">// a4</span></span><br><span class="line">fclose(stream);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>最终输出如下：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/5.png" alt=""><br>可见两次指针p指向的地址并不相同，并不是同一内存区域。<br>解释：操作系统为不同的指针分配不同的地址，同时为了避免指针之间的冲突，所以不能把不同的指针指向同一内存区域。</p><h1 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h1><p><strong>根据以下代码完成实验。</strong><br><strong>要求：</strong><br><strong>1、阅读并编译运行该程序，观察输出结果，说明程序功能。（编译命令：gcc -o thread thread.c -Wall –pthread）（执行命令1：./thread 1000）</strong><br><strong>2、尝试其他输入参数并执行，并总结执行结果的有何规律？你能尝试解释它吗？（例如执行命令2：./thread 100000）（或者其他参数。）</strong></p><p>1、 程序功能为并发两个线程对同一变量进行若干次加一操作，并输出变量初值与终值。<br>2、 实验说明中的代码在我这里并不能执行，修改程序如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">volatile</span> <span class="keyword">int</span> counter = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> loops;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">worker</span><span class="params">(<span class="keyword">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; loops; i++) &#123;</span><br><span class="line">counter++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line"><span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"usage: threads &lt;value&gt;\n"</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">loops = atoi(argv[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">pthread_t</span> p1, p2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Initial value : %d\n"</span>, counter);</span><br><span class="line"></span><br><span class="line">pthread_create(&amp;p1, <span class="literal">NULL</span>, worker, <span class="literal">NULL</span>);</span><br><span class="line">pthread_create(&amp;p2, <span class="literal">NULL</span>, worker, <span class="literal">NULL</span>);</span><br><span class="line">pthread_join(p1, <span class="literal">NULL</span>);</span><br><span class="line">pthread_join(p2, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Final value : %d\n"</span>, counter);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果如下，其中pthread由于不是标准库所以编译语句要加上-pthread：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/6.png" alt=""><br>可见终值与初值的差为输入参数的两倍。<br>解释：虽然开了两个线程，但是两个线程均对同一变量进行加一操作，参数即为循环的次数，所以为输入参数的两倍。</p><h1 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h1><p><strong>系统调用实验，了解系统调用不同的封装形式。</strong><br><strong>要求：参考下列网址中的程序。阅读分别运行用API接口函数getpid()直接调用和汇编中断调用两种方式调用Linux操作系统的同一个系统调用getpid的程序。请问getpid的系统调用号是多少？系统调用的中断向量号是多少？你可以采用汇编中断调用形式调用其他的系统调用吗？</strong><br><strong><a href="http://hgdcg14.blog.163.com/blog/static/23325005920152257504165/" target="_blank" rel="noopener">http://hgdcg14.blog.163.com/blog/static/23325005920152257504165/</a></strong></p><p>仿照博客里的代码，我编写并编译执行了两个C文件getpid_c.c和getpid_huibina.c如下：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/7.png" alt=""><br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/8.png" alt=""><br>getpid的系统调用号为0x14，中断向量为0x80。<br>可以调用其他系统函数，64位系统内核内函数的具体实现和系统调用函数之间的对应关系通过如下文件syscall_64.tbl来记录，就可以使用汇编调用。<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/9.png" alt=""><br>我尝试了open函数的嵌入式汇编的调用，代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> file = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span>* src = <span class="string">"log.txt"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">asm</span> <span class="title">volatile</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov $0, %%ebx\n\t"</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov $0x5, %%eax\n\t"</span>   <span class="comment">//open的系统调用号为0x5</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov %1, %%ebx\n\t"</span>     <span class="comment">//将文件地址赋给第一个参数</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov $0002, %%ecx\n\t"</span>  <span class="comment">//立即数2表示O_RDWR，即可读可写</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov $0644, %%edx\n\t"</span>  <span class="comment">//立即数0644表示文件的访问权限。</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"int $0x80\n\t"</span>          <span class="comment">//中断，系统调用</span></span></span></span><br><span class="line"><span class="function"><span class="params"><span class="string">"mov %%eax, %0\n\t"</span>     </span></span></span><br><span class="line"><span class="function"><span class="params">:<span class="string">"=m"</span>(file)</span></span></span><br><span class="line">:"b"(src)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"file: %d\n"</span>, file);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而直接编译会有报错如下：<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/10.png" alt=""><br>原因是我的虚拟机是64位的Ubuntu，mov是一个32位的api，因此需要在asm_open.c之前加上-m32的配置。同时由于缺少部分C语言的库，还需要通过指令sudo apt-get install build-essential libc6-dev libc6-dev-i386命令完成安装，整个过程如下<br><img src="/2018/03/15/《操作系统》实验1-操作系统初步/11.png" alt=""><br>可见file的值变为了-14，成功进行了系统调用。</p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>通过本次实验，我初次体验了Linux环境下CPU、内存、进程和系统调用，并通过查阅资料在给定代码的基础上进行一定程度的修改，完成预定的实验任务，相信对于操作系统进一步的学习有积极的影响。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1] Ubuntu关闭地址空间随机化(ASLR)的方法 <a href="http://www.xuebuyuan.com/1571079.html" target="_blank" rel="noopener">http://www.xuebuyuan.com/1571079.html</a><br>[2] Linux下undefinedreference to ‘pthread_create’问题解决 <a href="http://blog.csdn.net/jiangxinyu/article/details/7778864" target="_blank" rel="noopener">http://blog.csdn.net/jiangxinyu/article/details/7778864</a><br>[3] 系统调用的两种实现方法及对系统调用的理解 <a href="http://hgdcg14.blog.163.com/blog/static/23325005920152257504165/" target="_blank" rel="noopener">http://hgdcg14.blog.163.com/blog/static/23325005920152257504165/</a><br>[4] 使用嵌入汇编调用open系统调用 <a href="http://blog.csdn.net/u013511711/article/details/50933854" target="_blank" rel="noopener">http://blog.csdn.net/u013511711/article/details/50933854</a><br>[5] gcc嵌入汇编Error:unsupported for `mov’ 错误解决方法 <a href="http://mblog.sigma.me/2012/11/26/gcc%E5%B5%8C%E5%85%A5%E6%B1%87%E7%BC%96error-unsupported-for-mov-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html" target="_blank" rel="noopener">http://mblog.sigma.me/2012/11/26/gcc%E5%B5%8C%E5%85%A5%E6%B1%87%E7%BC%96error-unsupported-for-mov-%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</a><br>[6] ubuntu x64下编译出现找不到 cdefs.h / c++config.h的问题 <a href="http://blog.csdn.net/sfdazsdf/article/details/48625545" target="_blank" rel="noopener">http://blog.csdn.net/sfdazsdf/article/details/48625545</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、&quot;&gt;&lt;a href=&quot;#一、&quot; class=&quot;headerlink&quot; title=&quot;一、&quot;&gt;&lt;/a&gt;一、&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;根据以下代码完成下面的实验。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;要求：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;1、编
      
    
    </summary>
    
      <category term="课程" scheme="http://wang22ti.com/categories/%E8%AF%BE%E7%A8%8B/"/>
    
    
      <category term="课程" scheme="http://wang22ti.com/tags/%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="操作系统" scheme="http://wang22ti.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="C" scheme="http://wang22ti.com/tags/C/"/>
    
      <category term="汇编" scheme="http://wang22ti.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>读书_《编码》</title>
    <link href="http://wang22ti.com/2018/03/02/%E8%AF%BB%E4%B9%A6-%E3%80%8A%E7%BC%96%E7%A0%81%E3%80%8B/"/>
    <id>http://wang22ti.com/2018/03/02/读书-《编码》/</id>
    <published>2018-03-02T03:12:35.000Z</published>
    <updated>2018-03-02T03:12:36.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>日记18-3</title>
    <link href="http://wang22ti.com/2018/02/28/%E6%97%A5%E8%AE%B018-3/"/>
    <id>http://wang22ti.com/2018/02/28/日记18-3/</id>
    <published>2018-02-28T15:46:47.000Z</published>
    <updated>2018-03-31T16:46:36.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="18-3-31"><a href="#18-3-31" class="headerlink" title="18-3-31"></a>18-3-31</h1><p>上午和鑫云到志悦的班级分享经验。</p><p>下午做了部分《操作系统》作业，设计了一个课程报告的模板，</p><p>软件工程的作业开了个头。</p><p>晚上去下棋，互相捡漏子。。</p><p>到楼下还给两个留学生充了20元电费。。</p><p>给高时清买的手机到了，不过屏幕竟然不灵敏。。不科学。。</p><p>好久没写C++了，竟然连</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br></pre></td></tr></table></figure><p>都不知道加了。。菜哭</p><a id="more"></a><h1 id="18-3-30"><a href="#18-3-30" class="headerlink" title="18-3-30"></a>18-3-30</h1><p>上午起来看了《暴走大事件》，又帮笑佟学姐改了一波代码。</p><p>好好收拾了一波床铺。</p><p>晚上办了宣讲团，关于保研，效果还不错。</p><p>算法的学习还是得选择C++</p><h1 id="18-3-29"><a href="#18-3-29" class="headerlink" title="18-3-29"></a>18-3-29</h1><p>下午软件比赛中期答辩，实际评审和宣传的不一样啊。。</p><p>关键是举办方的组织能力实在堪忧，电脑竟然可以没电。。</p><p>晚上学术会开会，光速。</p><p>回来完成了操作系统的实验报告。</p><p>终于不那么紧张了。</p><h1 id="18-3-28"><a href="#18-3-28" class="headerlink" title="18-3-28"></a>18-3-28</h1><p>写好了体系结构的作业，嘎嘎</p><p>晚上CITeam开会，可以奋斗的时间不多了。</p><p>不能再研究P20了。。</p><h1 id="18-3-27"><a href="#18-3-27" class="headerlink" title="18-3-27"></a>18-3-27</h1><p>上午和袁锐去教材中心把班级的欠款补了</p><p>申请了一个学术的lisence， 装了一套jetbrain的软件，这下终于可以写c和java了</p><p>下午的小米发布会，MIX2s、游戏笔记本。</p><p>晚上华为发布会，P20(Pro)、Mate RS，拍照屠榜了。</p><p>真高兴生活在这个日新月异的时代。</p><p>把操作系统和计算机系统结构的实验做了，</p><p>明天疯狂写文档。</p><h1 id="18-3-26"><a href="#18-3-26" class="headerlink" title="18-3-26"></a>18-3-26</h1><p>嗯……根据今天的测试，在压力正常的情况下，2点睡有点迟。。</p><p>和朱老师联系了一下。</p><p>晚上在学活二楼吃香锅，巨饱，回来就睡。</p><p>醒来终于把《编译原理》第二章作业做好交上去了，</p><p>感觉关于短语的知识还不清晰。。但至少有点感觉了。</p><p>宣讲团的通知发出来了，关于保研。</p><p>斟酌了一番，觉得还是在旧电脑上装双系统比较好。。</p><p>MIIX的确不太适合跑沉重的任务</p><h1 id="18-3-25"><a href="#18-3-25" class="headerlink" title="18-3-25"></a>18-3-25</h1><p>固态到啦，去南门的小店里装上了</p><p>顺便观察了一波，下次应该可以自己拆机了，嘻嘻。</p><p>四食堂二楼的香锅，第一次搞错了次序，第二次搞错了口味，第三次搞错了咸淡。。</p><p>装了一下午软件，啊，要做作业啊！</p><p>晚上基本把《编译原理》作业做好了。</p><p>科研经验给我带来了不错的文案编辑能力，啊。</p><h1 id="18-3-24"><a href="#18-3-24" class="headerlink" title="18-3-24"></a>18-3-24</h1><p>穿上一身帅气的西装，大创答辩终于结束啦！希望有个好结果！</p><p>最辛苦的阶段终于过去了！</p><p>要疯狂操作一波作业啦，还有论文。</p><p>下午和晚上和嘉哥、翔哥交流，说了憋了一星期的语句。</p><p>晚上买了块三星的250G固态，嘻嘻。</p><h1 id="18-3-23"><a href="#18-3-23" class="headerlink" title="18-3-23"></a>18-3-23</h1><p>啊，结题报告、答辩PPT、网站后天，疯狂操作了一天</p><h1 id="18-3-22"><a href="#18-3-22" class="headerlink" title="18-3-22"></a>18-3-22</h1><p>上午《编译原理》小测，末了和徐老师有所交流，幸运。</p><p>啊，建模，建模，代码，代码，疯狂操作。。</p><h1 id="18-3-21"><a href="#18-3-21" class="headerlink" title="18-3-21"></a>18-3-21</h1><p>中午和昶霆一起开了班长支书会议，关于团日活动。</p><p>继续写代码。。</p><p>终于把评价的部分旰完了，接下来是推荐部分。。</p><p>尝试建立团日活动工作组。。失败</p><h1 id="18-3-20"><a href="#18-3-20" class="headerlink" title="18-3-20"></a>18-3-20</h1><p>上午打磨好了百度api的调用，又多了一些经验，嘿嘿。</p><p>比如调包一定要卸载try-except中。</p><p>下午继续写程序，弄标签。</p><p>其间讨论了创业比赛的ppt，班级体测的时间。</p><p>5点半找童老师讨论学习部事宜，不顺利。</p><p>晚上继续写代码，标签贴好了。</p><p>回来把周日创新比赛答辩的ppt改好了。</p><p>感谢袁锐送我的酸奶，大盒的。</p><p>一定要撑住，一定。</p><h1 id="18-3-19"><a href="#18-3-19" class="headerlink" title="18-3-19"></a>18-3-19</h1><p>从下午一起来就不停地写大创代码，</p><p>完成了数据的清洗和百度api调用的初步实现，还需要打磨一些情况。</p><h1 id="18-3-18"><a href="#18-3-18" class="headerlink" title="18-3-18"></a>18-3-18</h1><p>又忙活了一上午，终于把创青春的电子稿搞定啦！</p><p>还有很多事情，作业、大创、软件比赛的ppt……</p><p>休息了一下午，看了龙珠超，要继续干活啦！</p><p>晚上完成了作业和软件比赛ppt提纲的撰写，舍弃了学习部第二次例会。</p><p>论文状态还是没变啊啊</p><h1 id="18-3-17"><a href="#18-3-17" class="headerlink" title="18-3-17"></a>18-3-17</h1><p>啊，和浩珉浩男写了一天的创新创业比赛，</p><p>这几乎是数学建模的节奏了。</p><h1 id="18-3-16"><a href="#18-3-16" class="headerlink" title="18-3-16"></a>18-3-16</h1><p>啊……上午没有课就起得很迟，这不行……</p><p>给Ubuntu换了一个清华的源，瞬间感觉这是一个健全的系统。</p><p>下午到9点和浩男浩珉又做了创新创业的比赛，效率还不错，还得加油。</p><p>晚上学生会开会，给部长们又交代了一些事情。</p><p>完成了小米云的重新备份。</p><p>修好了mathtype和office不兼容的问题，有时间写一篇。</p><h1 id="18-3-15"><a href="#18-3-15" class="headerlink" title="18-3-15"></a>18-3-15</h1><p>啊，早上编译原理跑错教室了。。尴尬</p><p>在捷波朗的官网下载了相关应用，越来越感觉好用。</p><p>花了一下午的时间重新搭了博客，两个git一定要都设置好才能deploy，坑惨了</p><p>gurobi半天都激活不了，后来发现是已经过期了，又申请了一个。</p><p>晚上又把操作系统的实验认真做了一遍，解决了不少问题，开心！</p><h1 id="18-3-14"><a href="#18-3-14" class="headerlink" title="18-3-14"></a>18-3-14</h1><p>下午把电脑拿回来啦！</p><p>重装系统，安装软件，配置环境，忙活了好久。。</p><p>捷波朗的耳机到啦！试了试感觉还不错，只不错貌似因为开会没法下载软件了</p><p>晚上和浩珉浩男初步做了创新创业的比赛，但是效率好低。</p><p>时清漏掉了评论的爬取，大创又得延迟，时间太紧张了。</p><p>熬夜把操作系统的实验完成了，一下就到了3点。。要完</p><h1 id="18-3-13"><a href="#18-3-13" class="headerlink" title="18-3-13"></a>18-3-13</h1><p>啊，鼻炎又犯了，上午和袁锐去了一趟校医院。</p><p>回来吃了药，一觉又睡到了3点多。。</p><p>收到了白佳灏的明信片！好开心！一定要早点回信！</p><p>又问了一下《控制理论与应用》的编辑部，可以不用latex排版投稿！</p><p>开心，很快把稿件投了出去，祝好运。</p><p>联想售后通知我电脑修好了，我很怀疑只是重装了系统。。明天去看看吧</p><p>极端不幸的情况似乎在好转，祝福~</p><h1 id="18-3-12"><a href="#18-3-12" class="headerlink" title="18-3-12"></a>18-3-12</h1><p>一早起来去知春路的联想售后一趟，要过好几天用机械硬盘的生活了。。。</p><p>老实讲，排除便携性和开机速度，旧电脑并不是不能忍。</p><p>啊……午觉睡到了3点多，可以说很堕落了。</p><p>啊，阿里云连不上，稿件因为积压严重被退稿，电脑又坏了，可以说是很不幸的了。。。</p><p>啊啊啊，心态爆炸，假装镇定。</p><p>啊，百度云的api真好用，就是他了。</p><p>测试一圈下来，对于我输入的单个句子，无论是积极概率还是置信区间，效果都很差。</p><p>但是我尝试用京东和慕课学院的评价时，效果却异常地好。</p><p>真奇怪。</p><h1 id="18-3-11"><a href="#18-3-11" class="headerlink" title="18-3-11"></a>18-3-11</h1><p>哇，可能是昨天玩游戏的报应吧，MIIX 5pro坏了。。。</p><p>开机一会就死机。。。</p><p>折腾了一天，重装系统都不行。。。</p><p>啊，一天就这样流逝了。。</p><p>装系统的时候不应该玩《魔法禁书目录》的。。</p><p>真是倒霉的时候喝水都塞牙。。不幸啊。。</p><h1 id="18-3-10"><a href="#18-3-10" class="headerlink" title="18-3-10"></a>18-3-10</h1><p>snownlp貌似很久没更新了，BAT都有nlp的包，看来还是得调API。</p><p>emmmm，忙活了一个下午，终于把论文有改了一版投出去了。</p><p>回来忽然想玩地下城，倒腾了一个多小时，手累。</p><p>我地下城的角色还真不少。</p><h1 id="18-3-9"><a href="#18-3-9" class="headerlink" title="18-3-9"></a>18-3-9</h1><p>上午原本想把Ubuntu弄成Mac界面，结果越弄越乱，算了。</p><p>哇，下午一起来就收到退稿的邮件，原因是新的规定不接受本科生第一作者。</p><p>哇，早说嘛，以后投稿都要打电话问一问编辑部，emmmm。</p><p>赶紧另选了一家《铁道学报》，找任老师王老师盖了章，明天投出去。</p><p>晚上学习部开会，气氛很好，这学期应该很有作为。</p><p>可能是最没有成果的一天了。</p><p>晚上回来了解了一下jieba以外的nlp库，处理中文的，snownlp看起来不错。</p><h1 id="18-3-8"><a href="#18-3-8" class="headerlink" title="18-3-8"></a>18-3-8</h1><p>把维基百科所有的词条整理好了！开心</p><p>中午开了主席团的会，2个小时，妈耶，被批评了一通，看来要落实一些事情。</p><p>下午和浩珉、浩男讨论了两个创业比赛的大体方向，</p><p>还和浩男讨论了学习部一学期的安排。</p><p>晚上和浩珉吃牛肉拉面，另加的滑蛋真不错，还认识了张博。</p><p>看到今晚的朋友圈，感觉全世界都在健身。</p><p>又找了一些中文的词库，维基百科的几乎是严肃的名词，必然是不够的。</p><p>给学校邮箱加了一个别名<a href="mailto:wangzitai@bjtu.edu.cn" target="_blank" rel="noopener">wangzitai@bjtu.edu.cn</a></p><p>虽然本来很想用wang22ti的，但是考虑到学校的嘛，就这样吧。</p><p>为了做操作系统的作业，又安装了VMware和Ubuntu</p><h1 id="18-3-7"><a href="#18-3-7" class="headerlink" title="18-3-7"></a>18-3-7</h1><p>软件工程的老师真是满嘴跑火车，emmmm</p><p>虽然我还是认同一些观点的，但仍然是跑火车。</p><p>和时清讨论了大创爬虫的一些细节，发现mooc学院真是一个好网站。</p><p>论文终于投上去啦！！巨开心，希望有个好结果。</p><p>填了一个巨大的学生调查问卷。</p><p>和许嘉、高时清、张宇翔、夏爱宁、董萧蔓组队虚拟化与云计算。</p><p>jieba库竟然提供了关键词提取，想到上一个项目里我重复造的轮子，几乎哭下来。</p><p>哇，维基百科竟然有提供的<a href="http://wiki.kiwix.org/wiki/Content_in_all_languages/zh-cn" target="_blank" rel="noopener">语料库</a>，良心极了！感动。</p><p>申请了一个ORCID<code>0000-0002-5881-7270</code>，嘿嘿，感觉自己是个科学家。</p><h1 id="18-3-6"><a href="#18-3-6" class="headerlink" title="18-3-6"></a>18-3-6</h1><p>下午和媛媛讨论了大创的最终安排，要拼命了啊</p><p>论文只剩下在系统无法添加基金项目，emmm，明天问一下编辑部吧。</p><p>虽然还是很冷，但是柳条已经隐隐泛着绿色了。</p><p>又学了一点jieba库，明天多学一点。</p><h1 id="18-3-5"><a href="#18-3-5" class="headerlink" title="18-3-5"></a>18-3-5</h1><p>妈的，搬桌子倒垃圾就当志愿算了，</p><p>倒垃圾还被阻拦，也没看见我穿着短袖就让我到楼外去？妈的zz。</p><p>终于把创客空间收拾好了。</p><p>精雕细琢了一天论文，终于可以了！！！</p><p>可是发现还有一些事情，明天干完！</p><p>和吴文睿去健身，</p><p>遇见了余其轩学长，嘿嘿，教练。</p><h1 id="18-3-4"><a href="#18-3-4" class="headerlink" title="18-3-4"></a>18-3-4</h1><p>软卧果然还是比硬卧舒服啊，</p><p>床宽了些， 空间高了一些，有放东西的小架子，有隔间的门……</p><p>睡得还不错。</p><p>收拾东西，理发，拿衣服，买教材，改论文，看《龙珠超》。</p><p>还真是异常丰富的一天呢。</p><p>自在极意。</p><h1 id="18-3-3"><a href="#18-3-3" class="headerlink" title="18-3-3"></a>18-3-3</h1><p>改格式感觉自己office的水平大有精进。。</p><p>中午小卫大哥和二姑来家里吃饭</p><p>晚上10点，又踏上了北上的路，</p><p>新的半年开始了，关键性的。</p><h1 id="18-3-2"><a href="#18-3-2" class="headerlink" title="18-3-2"></a>18-3-2</h1><p>忽然发现时间很紧迫啦，论文，大创，创新创业比赛</p><p>都是在3月，emmm，果然2月过得太舒服了。</p><p>上午清理了一下学校邮箱，腾出2个G，大概可以用一个学期了。</p><p>哇呜，小米6终于更新人脸解锁啦！开心</p><p>带爸爸妈妈看《极乐净土》,嘿嘿。</p><p>处理一堆事情，要开学了事还真不少。</p><p>要根据大改论文格式了，路漫漫啊。</p><p>word真是垃圾。</p><p>买了mathtype，感觉自己是个土豪。</p><h1 id="18-3-1"><a href="#18-3-1" class="headerlink" title="18-3-1"></a>18-3-1</h1><p>哎呀，转眼就3月了。</p><p>好好珍惜每一天啊！</p><p>早起毁一天啊。。</p><p>晚上和孙远爸爸吃饭。</p><p>一天就过去了。。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;18-3-31&quot;&gt;&lt;a href=&quot;#18-3-31&quot; class=&quot;headerlink&quot; title=&quot;18-3-31&quot;&gt;&lt;/a&gt;18-3-31&lt;/h1&gt;&lt;p&gt;上午和鑫云到志悦的班级分享经验。&lt;/p&gt;
&lt;p&gt;下午做了部分《操作系统》作业，设计了一个课程报告的模板，&lt;/p&gt;
&lt;p&gt;软件工程的作业开了个头。&lt;/p&gt;
&lt;p&gt;晚上去下棋，互相捡漏子。。&lt;/p&gt;
&lt;p&gt;到楼下还给两个留学生充了20元电费。。&lt;/p&gt;
&lt;p&gt;给高时清买的手机到了，不过屏幕竟然不灵敏。。不科学。。&lt;/p&gt;
&lt;p&gt;好久没写C++了，竟然连&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;都不知道加了。。菜哭&lt;/p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://wang22ti.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>调用百度翻译API</title>
    <link href="http://wang22ti.com/2018/02/20/%E8%B0%83%E7%94%A8%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91API/"/>
    <id>http://wang22ti.com/2018/02/20/调用百度翻译API/</id>
    <published>2018-02-19T16:02:09.000Z</published>
    <updated>2018-02-28T16:29:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>翻译常用汉语词汇为英语和日语学习</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>一开始还想自己写爬虫，</p><p>但考虑到是百度，以及个人水平，还是算了。</p><p>但意外注意到一个东西：</p><a id="more"></a><p><img src="/2018/02/20/调用百度翻译API/截图2018-02-28_23-51-15.png" alt="截图2018-02-28_23-51-15"></p><p>点开大喜，原来百度已经提供了API在<a href="http://api.fanyi.baidu.com/api/trans/product/index" target="_blank" rel="noopener">翻译开放平台</a>，</p><p>每个月有200万字符的免费通用翻译，真心良心了。</p><p>剩下的就很简单啦，官网里文档支持都很详细。</p><p>python版本我用requests库又写了一个函数，官网的示例有些老旧了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baidu_traslate</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    q=<span class="string">'apple'</span>,toLang=<span class="string">'zh'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">    fromLang=<span class="string">'auto'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">    appid=<span class="string">'****************'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">    secretKey=<span class="string">'****************'</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line">    <span class="keyword">import</span> random</span><br><span class="line">    <span class="keyword">import</span> hashlib</span><br><span class="line">    <span class="keyword">import</span> json</span><br><span class="line">    url = <span class="string">'http://api.fanyi.baidu.com/api/trans/vip/translate'</span></span><br><span class="line">    salt = random.randint(<span class="number">32768</span>, <span class="number">65536</span>)</span><br><span class="line"></span><br><span class="line">    sign = appid + q + str(salt) + secretKey</span><br><span class="line">    m = hashlib.md5(sign.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    sign = m.hexdigest()</span><br><span class="line"></span><br><span class="line">    url = url + \</span><br><span class="line">          <span class="string">'?appid='</span> + appid + \</span><br><span class="line">          <span class="string">'&amp;q='</span> + q + \</span><br><span class="line">          <span class="string">'&amp;from='</span> + fromLang + \</span><br><span class="line">          <span class="string">'&amp;to='</span> + toLang + \</span><br><span class="line">          <span class="string">'&amp;salt='</span> + str(salt) + <span class="string">'&amp;sign='</span> + sign</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        text = requests.get(url).text</span><br><span class="line">        ret_dict = json.loads(text)</span><br><span class="line">        ret_dict[<span class="string">'src'</span>] = ret_dict[<span class="string">'trans_result'</span>][<span class="number">0</span>][<span class="string">'src'</span>]</span><br><span class="line">        ret_dict[<span class="string">'dst'</span>] = ret_dict[<span class="string">'trans_result'</span>][<span class="number">0</span>][<span class="string">'dst'</span>]</span><br><span class="line">        ret_dict.pop(<span class="string">'trans_result'</span>)</span><br><span class="line">        <span class="keyword">return</span> ret_dict</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'error!'</span>)</span><br></pre></td></tr></table></figure><p>初步接触了md5加密，以前完全没有概念。</p><h1 id="对百度翻译API的改进建议"><a href="#对百度翻译API的改进建议" class="headerlink" title="对百度翻译API的改进建议"></a>对百度翻译API的改进建议</h1><p><strong>返回的内容太简略啦！</strong></p><p><img src="/2018/02/20/调用百度翻译API/截图2018-03-01_00-05-54.png" alt="截图2018-03-01_00-05-54"></p><p>本来是想得到常用词汇的日语翻译，结果发现全是汉字又不知道读音，GG。</p><p>相比之下，有道就好得多，返回信息很丰富：</p><p><img src="/2018/02/20/调用百度翻译API/截图2018-03-01_00-10-07.png" alt="截图2018-03-01_00-10-07"></p><p>不过虽然送了100元，但是完全不免费。。</p><p><img src="/2018/02/20/调用百度翻译API/截图2018-03-01_00-12-48.png" alt="截图2018-03-01_00-12-48"></p><p>啊，总之没有日语注音的事情。</p><p>末了发一下反馈，嘿咻~</p><p><img src="/2018/02/20/调用百度翻译API/截图2018-03-01_00-27-33.png" alt="截图2018-03-01_00-27-33"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;翻译常用汉语词汇为英语和日语学习&lt;/p&gt;
&lt;h1 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h1&gt;&lt;p&gt;一开始还想自己写爬虫，&lt;/p&gt;
&lt;p&gt;但考虑到是百度，以及个人水平，还是算了。&lt;/p&gt;
&lt;p&gt;但意外注意到一个东西：&lt;/p&gt;
    
    </summary>
    
    
      <category term="百度翻译" scheme="http://wang22ti.com/tags/%E7%99%BE%E5%BA%A6%E7%BF%BB%E8%AF%91/"/>
    
      <category term="API" scheme="http://wang22ti.com/tags/API/"/>
    
      <category term="有道翻译" scheme="http://wang22ti.com/tags/%E6%9C%89%E9%81%93%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>小米6连接三星gear手表</title>
    <link href="http://wang22ti.com/2018/02/16/%E5%B0%8F%E7%B1%B36%E8%BF%9E%E6%8E%A5%E4%B8%89%E6%98%9Fgear%E6%89%8B%E8%A1%A8/"/>
    <id>http://wang22ti.com/2018/02/16/小米6连接三星gear手表/</id>
    <published>2018-02-16T15:54:07.000Z</published>
    <updated>2018-02-28T15:42:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="连接手机"><a href="#连接手机" class="headerlink" title="连接手机"></a>连接手机</h1><p>这并不是件容易的事情！<br>需要在Google play下载一堆东西如下，其中</p><p><code>Gear S Plugin</code>和<code>Samsung Accessory Service</code>以及<code>Samsung Push Service</code>是保证Gear和手机互联的基本组件。</p><p><code>Samsung Gear</code>是用来连接和设置的应用软件。</p><p><code>三星健康</code>是查看健康数据以及进行相关设置的应用软件。</p><a id="more"></a><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-18-36-44-620_com.miui.securitycenter - 副本.png" alt="Screenshot_2018-02-28-18-36-44-620_com.miui.securitycenter - 副本"></p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-23-17-24-685_com.miui.securitycenter.png" alt="Screenshot_2018-02-28-23-17-24-685_com.miui.securitycenter"></p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-23-18-02-043_com.miui.securitycenter.png" alt="Screenshot_2018-02-28-23-18-02-043_com.miui.securitycenter"></p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-18-36-44-620_com.miui.securitycenter.png" alt="Screenshot_2018-02-28-18-36-44-620_com.miui.securitycenter"></p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-18-36-54-622_com.miui.securitycenter.png" alt="Screenshot_2018-02-28-18-36-54-622_com.miui.securitycenter"></p><p>除此之外，还要打开<code>Samsung Accessory Service</code>和<code>Gear S Plugin</code>的自启动管理权限：</p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-23-33-11-079_com.miui.securitycenter.png" alt="Screenshot_2018-02-28-23-33-11-079_com.miui.securitycenter"></p><p>才能打开<code>Samsung Gear</code>见到如下界面：</p><p><img src="/2018/02/16/小米6连接三星gear手表/Screenshot_2018-02-28-18-37-22-645_com.samsung.android.gearoplugin.png" alt="Screenshot_2018-02-28-18-37-22-645_com.samsung.android.gearoplugin"></p><h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><p>一段时间用下来，电池正常可以撑2天，马马虎虎啦。</p><p>应用不少，甚至有游戏，但是都是鸡肋啦。</p><p>不过数据记录得详细准确，支持的运动模式特别丰富，能想到的都有，赞。</p><p>比如之前的小米运动不显示我午睡的情况，</p><p>还会自动记录走路的情况！</p><p>唯一的缺陷是可以加一下esim技术，类似于华为watch2，不过价格可能就上天了吧？</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;连接手机&quot;&gt;&lt;a href=&quot;#连接手机&quot; class=&quot;headerlink&quot; title=&quot;连接手机&quot;&gt;&lt;/a&gt;连接手机&lt;/h1&gt;&lt;p&gt;这并不是件容易的事情！&lt;br&gt;需要在Google play下载一堆东西如下，其中&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Gear S Plugin&lt;/code&gt;和&lt;code&gt;Samsung Accessory Service&lt;/code&gt;以及&lt;code&gt;Samsung Push Service&lt;/code&gt;是保证Gear和手机互联的基本组件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Samsung Gear&lt;/code&gt;是用来连接和设置的应用软件。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;三星健康&lt;/code&gt;是查看健康数据以及进行相关设置的应用软件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="三星" scheme="http://wang22ti.com/tags/%E4%B8%89%E6%98%9F/"/>
    
      <category term="小米" scheme="http://wang22ti.com/tags/%E5%B0%8F%E7%B1%B3/"/>
    
      <category term="手表" scheme="http://wang22ti.com/tags/%E6%89%8B%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>2018启示录</title>
    <link href="http://wang22ti.com/2018/02/14/2018%E5%90%AF%E7%A4%BA%E5%BD%95/"/>
    <id>http://wang22ti.com/2018/02/14/2018启示录/</id>
    <published>2018-02-13T16:15:56.000Z</published>
    <updated>2018-04-01T13:23:12.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2月14日"><a href="#2月14日" class="headerlink" title="2月14日"></a>2月14日</h1><p>见证了绝对的专注，</p><p>重演了陌生的悲剧，</p><p>力不从心开始在考试中显现，</p><p>极端的阴郁促使博客的搭建。</p><p>madamada</p><p>从今天起，锻炼强健的体魄，探索未知的风景，藐视无尽的未知，</p><p>快乐着，无问双单。</p><p>呵，红颜，知己。</p><h1 id="2月15日"><a href="#2月15日" class="headerlink" title="2月15日"></a>2月15日</h1><p>良好的作息，真的是很令人清爽的！</p><p>工作3小时，休息30分钟，每周锻炼3次。</p><h1 id="2月16日"><a href="#2月16日" class="headerlink" title="2月16日"></a>2月16日</h1><p>河山寂寂，日月昭昭，博利禄于于一时，寄情思与山水。</p><p>有时候我们觉得时间匆匆，要么是因为健忘，要么是因为没有耐心地珍惜每一天。</p><p>真的是健忘么？</p><h1 id="2月20日"><a href="#2月20日" class="headerlink" title="2月20日"></a>2月20日</h1><p>人的本性是逐利的，无善恶之分。</p><p>人倾向于反对，比如反对这一条。</p><h1 id="2月23日"><a href="#2月23日" class="headerlink" title="2月23日"></a>2月23日</h1><p>我将坚信内心的光明，</p><p>即便前方是无尽的黑暗，</p><p>即便我的努力可能无济于事，</p><p>我也永远不会屈服。</p><h1 id="2月25日"><a href="#2月25日" class="headerlink" title="2月25日"></a>2月25日</h1><p>周公还是王莽？孔明还是曹操？</p><p>薛定谔的猫。</p><p>默克尔、罗斯福、希特勒、斯大林、拿破仑、普京、卡扎菲……</p><p>时间的并不能推导性质。</p><p>有些人讥讽，有些人困惑，有些人称赞。</p><p>大多数只是生意。</p><p>放下无谓的揣测吧，</p><p>时间会证明一切。</p><h1 id="2月27日"><a href="#2月27日" class="headerlink" title="2月27日"></a>2月27日</h1><p>事实证明，</p><p>最缺乏的却还是自律，</p><p>严格的自律。</p><h1 id="2月28日"><a href="#2月28日" class="headerlink" title="2月28日"></a>2月28日</h1><p>在我们看不见、不知道的地方，</p><p>有无数的人以无数种方式生活着呢，</p><p>不要把周围的一切认为是理所应当，</p><p>不要把自己的普世价值强加于他人，</p><p>不要认为人生的出路只有一种，</p><p>不要认为现在的一切就是一切。</p><p>帮助他人时，</p><p>即便是心甘情愿的，</p><p>也要告诉他，</p><p>这并不是理所应得的。</p><p>优秀的团队合作除了要求责任心、能力，</p><p>良好的沟通磨合，适当的妥协让步，</p><p>对于每一个成员都是必不可少的。</p><h1 id="3月2日"><a href="#3月2日" class="headerlink" title="3月2日"></a>3月2日</h1><p>构建稳定的世界观，大概需要对以下问题进行思考：</p><p>人与其他动物相同吗？为何？</p><p>人与其他人相同吗？为何？</p><p>人的本性为何？</p><p>人活着为何？</p><p>想到再加~</p><h1 id="3月3日"><a href="#3月3日" class="headerlink" title="3月3日"></a>3月3日</h1><p>小时听歌词，稍长时听旋律，现在已经开始听故事了。</p><p>与我而言，《世末歌者》、《Five Hundred Miles》、《山水之间》和《Good Time》都是很好的故事，</p><p>然而很多故事并没有留下故事。</p><p>不过《世末歌者》定然是最好的。</p><h1 id="3月12日"><a href="#3月12日" class="headerlink" title="3月12日"></a>3月12日</h1><p>由于各种因素，大脑很久没能满负荷运行了。</p><p>这让我力不从心，虽然他人认为我轻而易举。</p><p>减少电子屏幕尤其是手机的使用时间，早睡早起。</p><p>一个电子化与高效率的多目标优化问题。</p><h1 id="3月30日"><a href="#3月30日" class="headerlink" title="3月30日"></a>3月30日</h1><p>不要满足于一时的进步，脱稿演讲的水平还需要增加！仅仅有流畅度是不够的。</p><h1 id="4月1日"><a href="#4月1日" class="headerlink" title="4月1日"></a>4月1日</h1><p>脑子越不转，越迟钝。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2月14日&quot;&gt;&lt;a href=&quot;#2月14日&quot; class=&quot;headerlink&quot; title=&quot;2月14日&quot;&gt;&lt;/a&gt;2月14日&lt;/h1&gt;&lt;p&gt;见证了绝对的专注，&lt;/p&gt;
&lt;p&gt;重演了陌生的悲剧，&lt;/p&gt;
&lt;p&gt;力不从心开始在考试中显现，&lt;/p&gt;
&lt;p&gt;极端的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>gurobi提高速度的奇技淫巧</title>
    <link href="http://wang22ti.com/2018/02/05/gurobi%E6%8F%90%E9%AB%98%E9%80%9F%E5%BA%A6%E7%9A%84%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    <id>http://wang22ti.com/2018/02/05/gurobi提高速度的奇技淫巧/</id>
    <published>2018-02-05T04:28:08.000Z</published>
    <updated>2018-02-05T06:52:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="适当降低精度"><a href="#适当降低精度" class="headerlink" title="适当降低精度"></a>适当降低精度</h1><p>gurobi默认的优化精度为1e-4</p><p>然而实际工程中可能并不需要</p><p>为了大幅减少优化时间，可以通过设置以tolerance为关键词的参数减少精度。</p><a id="more"></a><p>例如在一个MIP模型中，通过语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">m = Model()</span><br><span class="line"></span><br><span class="line">m.Params.MIPGap = <span class="number">0.1</span></span><br></pre></td></tr></table></figure><p>就可以将精度设置为1e-1。</p><p>查了一下手册，相关参数如下：</p><p><img src="/2018/02/05/gurobi提高速度的奇技淫巧/截图2018-02-05_12-32-42.png" alt="截图2018-02-05_12-32-42"></p><h1 id="减少逻辑约束"><a href="#减少逻辑约束" class="headerlink" title="减少逻辑约束"></a>减少逻辑约束</h1><p>比如这样的一个约束</p><p>$$<br>x=0 \quad or \quad a&lt;=x&lt;=b<br>$$<br>不做处理是设置一个二进制变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = m.addVar(vtype=GRB.INTEGER, name=<span class="string">'x'</span>)</span><br><span class="line">binary = m.addVar(vtype=GRB.BINARY, name=<span class="string">'binary'</span>)</span><br><span class="line">m.addGenConstrIndicator(binary, <span class="keyword">True</span>, x==<span class="number">0</span>)</span><br><span class="line">m.addGenConstrIndicator(binary, <span class="keyword">False</span>, x&lt;=b)</span><br><span class="line">m.addGenConstrIndicator(binary, <span class="keyword">False</span>, x&gt;=a)</span><br></pre></td></tr></table></figure><p>但貌似indicator方法是比较慢的，所以将<code>约束(1)</code>改写为<br>$$<br>x&lt;=b<br>$$</p><p>$$<br>a<em>bin&lt;=x&lt;=bin</em>inf<br>$$</p><p>其中<code>bin</code>是一个二进制变量，<code>inf</code>是一个足够大的常量，于是代码改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x = m.addVar(vtype=GRB.INTEGER, name=<span class="string">'x'</span>)</span><br><span class="line">binary = m.addVar(vtype=GRB.BINARY, name=<span class="string">'binary'</span>)</span><br><span class="line">inf = int(<span class="string">'inf)</span></span><br><span class="line"><span class="string">m.addConstr(x &lt;= b)</span></span><br><span class="line"><span class="string">m.addConstr(a * binary &lt;= x &lt;= binary * inf)</span></span><br></pre></td></tr></table></figure><h1 id="让足够大的数尽量小"><a href="#让足够大的数尽量小" class="headerlink" title="让足够大的数尽量小"></a>让足够大的数尽量小</h1><p>上面的代码可以进一步优化，让<code>inf</code>足够小，减小搜索空间。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = m.addVars(nodes, vtype=GRB.INTEGER, name=<span class="string">'x'</span>)</span><br><span class="line">binary = m.addVars(nodes, vtype=GRB.BINARY, name=<span class="string">'binary'</span>)</span><br><span class="line">m.addConstrs(x[node] &lt;= b[node] <span class="keyword">for</span> node <span class="keyword">in</span> nodes)</span><br><span class="line">m.addConstrs(a[node] * binary[node] &lt;= x[node] &lt;= binary[node] * max(b) <span class="keyword">for</span> node <span class="keyword">in</span> nodes)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;适当降低精度&quot;&gt;&lt;a href=&quot;#适当降低精度&quot; class=&quot;headerlink&quot; title=&quot;适当降低精度&quot;&gt;&lt;/a&gt;适当降低精度&lt;/h1&gt;&lt;p&gt;gurobi默认的优化精度为1e-4&lt;/p&gt;
&lt;p&gt;然而实际工程中可能并不需要&lt;/p&gt;
&lt;p&gt;为了大幅减少优化时间，可以通过设置以tolerance为关键词的参数减少精度。&lt;/p&gt;
    
    </summary>
    
      <category term="gurobi" scheme="http://wang22ti.com/categories/gurobi/"/>
    
    
      <category term="gurobi" scheme="http://wang22ti.com/tags/gurobi/"/>
    
      <category term="精度" scheme="http://wang22ti.com/tags/%E7%B2%BE%E5%BA%A6/"/>
    
      <category term="无穷大" scheme="http://wang22ti.com/tags/%E6%97%A0%E7%A9%B7%E5%A4%A7/"/>
    
  </entry>
  
  <entry>
    <title>论文撰写过程的总结</title>
    <link href="http://wang22ti.com/2018/02/04/%E8%AE%BA%E6%96%87%E6%92%B0%E5%86%99%E8%BF%87%E7%A8%8B%E7%9A%84%E6%80%BB%E7%BB%93/"/>
    <id>http://wang22ti.com/2018/02/04/论文撰写过程的总结/</id>
    <published>2018-02-04T07:41:35.000Z</published>
    <updated>2018-03-09T11:22:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="期刊"><a href="#期刊" class="headerlink" title="期刊"></a>期刊</h1><p><code>语言</code></p><p>中文或英文，通常即便中文期刊也要写英文的标题摘要关键字，有的要求参考文献有英文翻译</p><p><code>数据库</code></p><p>所谓某某期刊，就是指该期刊被对应的数据库收录。</p><p>有SCI、SSCI、EI、北大核心、南大核心、中国科学引文资料库等等。</p><p>具体参考知乎问题<a href="https://www.zhihu.com/question/20037578" target="_blank" rel="noopener">学术期刊有哪些种类</a></p><p>很多地方可以查，例如<a href="http://www.xueshu.com/" target="_blank" rel="noopener">学术之家</a>、<a href="http://muchong.com/journal.php" target="_blank" rel="noopener">小木虫</a></p><p><code>影响因子</code></p><p>概念比较复杂，总的来说被引用的次数越多越高</p><p>具体含义参考百度百科词条<a href="https://baike.baidu.com/item/%E5%BD%B1%E5%93%8D%E5%9B%A0%E5%AD%90/574727?fr=aladdin" target="_blank" rel="noopener">影响因子</a>以及知乎专栏<a href="https://zhuanlan.zhihu.com/p/24763700" target="_blank" rel="noopener">我国学术期刊的影响力和差距分析</a></p><p><code>发行周期</code></p><p>分为旬刊（10天）、半月刊、月刊、双月刊、季刊、半年刊、年刊。</p><p>可能影响录用的速度。</p><p><code>其他事项</code></p><p>确定刊物之前一定要去官网下载<strong>投稿须知</strong>，</p><p>一些刊物是不接受本科生乃至研究生为第一作者投稿的，可能还有别的需求，一定要打电话问清楚！！！</p><p>顺便下载论文模板和其他资料</p><h1 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h1><ul><li><p>部分期刊的关键词是有要求的</p></li><li><p><code>中图分类号</code>可以到<a href="http://ztflh.xhma.com/" target="_blank" rel="noopener">分类号网站</a>查询</p></li><li><p><code>文献标识码</code>参考百度百科词条<a href="https://baike.baidu.com/item/%E6%96%87%E7%8C%AE%E6%A0%87%E8%AF%86%E7%A0%81/8289448?fr=aladdin" target="_blank" rel="noopener">文献标识码</a></p></li><li><p>切忌口语化</p></li><li><p>问题描述、事实陈述要有依据</p></li><li><p>要使用严谨的科学用语，避免个人杜撰的词汇</p></li><li><p>要重视引言、问题背景的撰写，并不一定要求颠覆的、全新的创新，但一定要讲清楚意义何在</p></li><li><p>参考文献要有领域权威、国外代表，技术类应该有相当比重</p></li><li><p>数据可以插入excel对象，节约字数</p></li><li><p>注意期刊对参考文献数量、图片宽度、图片内格式的要求</p></li><li><p>在word里插入一个excel对象，如果是新建的，可能显示不完全，最好通过已有的excel表生成。</p></li><li><p>excel在<code>视图-页面布局</code>中可以按照<code>厘米</code>设置单元格大小。</p></li><li><p>为保证Visio对象内的字体在word中不失真，需要在Visio中设定页面大小，可以裁剪图片</p></li><li><p>对象内的内容不算字数</p></li><li><p>word中分栏要一次性完成，其中需要单栏的另外设置</p><p>​</p></li></ul><h1 id="数学公式——Mathtype的坑"><a href="#数学公式——Mathtype的坑" class="headerlink" title="数学公式——Mathtype的坑"></a>数学公式——Mathtype的坑</h1><p>很多人说Mathtype好用，我是没感觉到，丑啊不适配高分屏且不说，其他也有让人心烦的地方。</p><p>然而部分期刊强制要求使用mathtype输入数学公式，只好忍着恶心继续用了。</p><p>有官方的<a href="http://www.mathtype.cn/jiqiao/" target="_blank" rel="noopener">使用技巧</a>和<a href="http://www.mathtype.cn/wenti/" target="_blank" rel="noopener">常见问题</a>，以下列一些：</p><ul><li><a href="http://www.mathtype.cn/wenti/biaoqian-jieshao.html" target="_blank" rel="noopener">介绍MathType标签栏</a></li><li><a href="http://www.mathtype.cn/wenti/baocun-changyong.html" target="_blank" rel="noopener">MathType如何保存常用公式</a></li></ul><ul><li><a href="http://www.mathtype.cn/jiqiao/shuru-kongbai.html" target="_blank" rel="noopener">如何在MathType输入空格</a></li><li><a href="http://www.mathtype.cn/wenti/tiaozheng-hangju.html" target="_blank" rel="noopener">插入MathType公式行距变大的解决方法</a></li><li><a href="http://www.mathtype.cn/wenti/shiyong-qi.html" target="_blank" rel="noopener">MathType30天试用期过了怎么办？</a></li><li><a href="http://www.mathtype.cn/wenti/zifu-qubie.html" target="_blank" rel="noopener">易混淆的MathType希腊字母介绍</a></li><li><a href="http://www.mathtype.cn/jiqiao/yinyong-gongshi-bianhao-gongneng.html" target="_blank" rel="noopener">详解MathType引用公式编号功能</a></li><li><a href="http://www.mathtype.cn/jiqiao/neizhi-yangshi.html" target="_blank" rel="noopener">如何选择MathType内置样式</a></li></ul><p>另外，给整个方程组编一个号的方法一直没有找到，现在的解决方法是在word里用1行2列的表格，或者用不带框的文本框。</p><p>插入公式改变行距的话，把小的公式的行距改为固定值16磅。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>一般论文模板里会有说明，不过<a href="http://www.cnki.net/" target="_blank" rel="noopener">中国知网</a>是支持导出的！</p><p><img src="/2018/02/04/论文撰写过程的总结/截图2018-02-05_00-11-00.png" alt="截图2018-02-05_00-11-00"></p><p>对于一些特殊的例如政府文件，可以参考<a href="http://bbs.pinggu.org/thread-2736005-1-1.html" target="_blank" rel="noopener">学位论文中引用国家政策文件是否需要标注到参考文献中？格式是什么？</a></p><p>如果需要英文版参考文献，优先去看原文。</p><p>中文文献在知网搜就行，但是外文还是要用图书馆系统。</p><h1 id="投稿流程"><a href="#投稿流程" class="headerlink" title="投稿流程"></a>投稿流程</h1><ol><li><p>除了准备好稿件以外，还可能需要准备一份<code>版权协议</code>，要有所有作者的签字以及所属单位的盖章，袋盖长这样：</p><p><img src="/2018/02/04/论文撰写过程的总结/1520438054094.png" alt="1520438054094"></p></li><li><p>要考虑所属的学科以及对应的学科分类号，<a href="https://wenku.baidu.com/view/006766c8804d2b160b4ec0e2.html" target="_blank" rel="noopener">百度文库免费的链接</a></p></li><li><p>要考虑推荐审稿人及其基本信息（姓名、职称、单位、通讯地址、emil等等）</p></li><li><p>第一次投稿申请一个ORCID，介绍参考<a href="http://blog.sciencenet.cn/blog-213646-896726.html" target="_blank" rel="noopener">科学网博客</a>，注册网站为<a href="http://iauthor.cn/welcome/index" target="_blank" rel="noopener">中国科学家在线</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;期刊&quot;&gt;&lt;a href=&quot;#期刊&quot; class=&quot;headerlink&quot; title=&quot;期刊&quot;&gt;&lt;/a&gt;期刊&lt;/h1&gt;&lt;p&gt;&lt;code&gt;语言&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;中文或英文，通常即便中文期刊也要写英文的标题摘要关键字，有的要求参考文献有英文翻译&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="科研" scheme="http://wang22ti.com/categories/%E7%A7%91%E7%A0%94/"/>
    
    
      <category term="论文撰写" scheme="http://wang22ti.com/tags/%E8%AE%BA%E6%96%87%E6%92%B0%E5%86%99/"/>
    
      <category term="期刊" scheme="http://wang22ti.com/tags/%E6%9C%9F%E5%88%8A/"/>
    
      <category term="mathtype" scheme="http://wang22ti.com/tags/mathtype/"/>
    
      <category term="投稿流程" scheme="http://wang22ti.com/tags/%E6%8A%95%E7%A8%BF%E6%B5%81%E7%A8%8B/"/>
    
      <category term="参考文献" scheme="http://wang22ti.com/tags/%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE/"/>
    
  </entry>
  
  <entry>
    <title>日记18-2</title>
    <link href="http://wang22ti.com/2018/02/03/%E6%97%A5%E8%AE%B018-2/"/>
    <id>http://wang22ti.com/2018/02/03/日记18-2/</id>
    <published>2018-02-02T16:08:31.000Z</published>
    <updated>2018-02-28T15:43:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="18-2-28"><a href="#18-2-28" class="headerlink" title="18-2-28"></a>18-2-28</h1><p>终于又完成了论文一版的修改！</p><p>喜大普奔！</p><p>由于windows+高分屏，选择了miktex+texmaker</p><p>感觉还不错</p><p>晚上又陪妈妈看了一遍《摩登时代》，大师还是大师。</p><p>完成了之前积压的两篇博客</p><h1 id="18-2-27"><a href="#18-2-27" class="headerlink" title="18-2-27"></a>18-2-27</h1><p>比之前强一些了，</p><p>总归是改了一些论文了，</p><p>虽然并不算什么进展。</p><p>又学了不少日语，</p><p>晚上和罗叔叔等吃饭，</p><p>回来陪老爸看了《摩登时代》。</p><p>明天应该就可以了。</p><a id="more"></a><h1 id="18-2-26"><a href="#18-2-26" class="headerlink" title="18-2-26"></a>18-2-26</h1><p>？？？</p><p>一天又过去了？？？</p><p>下载一堆软件，的确是找到了学日语的好工具LingoDeer。</p><p>然而还没有英语的，</p><p>就是层次、体系、界面都还不错的那种。</p><p>今年没时间去高友鑫家玩了，</p><p>渴望开学。。</p><h1 id="18-2-25"><a href="#18-2-25" class="headerlink" title="18-2-25"></a>18-2-25</h1><p>又是混沌的一天，</p><p>除了睡觉，只看了一章《编码》，下了一盘棋，看了几集《游戏王》。</p><p>唉，家里果然还是不适合学习。</p><p>打起精神来啊！</p><p>对了，要修改宪法了。</p><h1 id="18-2-24"><a href="#18-2-24" class="headerlink" title="18-2-24"></a>18-2-24</h1><p>上午又和施锦颐玩了一圈，</p><p>中午大姨做的白汤排骨真是美味！</p><p>下午……晚上……</p><p>回到家混沌地就过去了。</p><p>真是混沌的一天。</p><p>论文真的要抓紧了，还有大创。</p><h1 id="18-2-23"><a href="#18-2-23" class="headerlink" title="18-2-23"></a>18-2-23</h1><p>和江循、姜易木、李明翔、苏心怡在万达聚餐，</p><p>之后和施锦颐在孩子王玩了一圈。</p><p>晚上和小卫大哥又吃了一顿，</p><p>之后去看《红海行动》，嘿嘿。</p><h1 id="18-2-22"><a href="#18-2-22" class="headerlink" title="18-2-22"></a>18-2-22</h1><p>二级路由，直接用两台小米路由器是最方便的，有一键中继。</p><p>涟水大润发的小米专卖店，并不是官方授权的，虽然装修没毛病，但是都加了价。</p><p>这样的模式，和ov并无本质区别。</p><p>就买个路由器吧。</p><p>官网的床头灯到了，很漂亮。</p><p>《数学之美》和《编码》也到了。</p><p>原来准备继续改论文，</p><p>然而貌似鼻炎犯了，脑子晕沉沉的，</p><p>就改了很基础的东西，</p><p>然后又和老子看了一遍《十二公民》。</p><p>末了翻了一下《编码》，一下看到了1点。</p><p>这才是计算机组成原理教材应有的样子。</p><p>无论技术进步到什么程度，我都能用继电器的原理明白计算机。</p><h1 id="18-2-21"><a href="#18-2-21" class="headerlink" title="18-2-21"></a>18-2-21</h1><p>去东山大哥家看施景颐啦，还是那么可爱</p><p>顺便试玩一下电子琴，《粉刷匠》哈哈哈哈，似乎不是很难。</p><p>晚上赶回来参加棋院的聚餐。</p><p>有了计网的知识，忽然发现局域网的配置并不是很困难的事情，哈哈</p><h1 id="18-2-20"><a href="#18-2-20" class="headerlink" title="18-2-20"></a>18-2-20</h1><p>啊，一觉睡到12点，起来和麻麻看了《阿甘正传》。</p><p>最近看的电影有些多了。</p><p>小米盒子3增强版到了，蛮好的，可以在电视上逛b站了！</p><p>放东西的架子到了，然而没有对应的螺丝刀，差评。</p><p>遗传算法的两本书也到了！</p><p>嗯，然而现在想学一下matlab</p><h1 id="18-2-19"><a href="#18-2-19" class="headerlink" title="18-2-19"></a>18-2-19</h1><p>和宋文韬一起看炮姐，吃牛排，扯淡。</p><p>一天很快就过去了。</p><p> 晚上写了一个高频词的翻译为日语程序，</p><p>百度的翻译api真是优秀。</p><p>然而没有对应的假名，学会了动态网页的爬取却没反爬成功</p><p>emmmm</p><h1 id="18-2-18"><a href="#18-2-18" class="headerlink" title="18-2-18"></a>18-2-18</h1><p>中午和羽峰大哥去中央城吃自助餐。</p><p>回来呼呼睡了一下午，总算不困了。</p><p>发现了回家查论文的好工具<a href="https://webvpn.bjtu.edu.cn/" target="_blank" rel="noopener">webvpn</a></p><p>想实践一下遗传算法的改进，但是发现没有系统的学习过，买了两本书，等一等吧。</p><p>晚上看了《唐人街探案》，嗯，似乎比2更精彩一些。</p><p>可能学一下matlab</p><h1 id="18-2-17"><a href="#18-2-17" class="headerlink" title="18-2-17"></a>18-2-17</h1><p>又回了趟老家，</p><p>下午看了《唐人街探案2》，蛮好的，就是有些不应该搞笑的地方搞笑了。</p><p>之后去了棋院，叔叔们的棋艺还是没有起色啊。</p><p>晚上陪爸爸妈妈看了《芳华》，</p><p>啊，不知道几十年后我们这代人拍出来的是什么样子。</p><p>拉他们看炮姐，然而都打不起兴趣。</p><p>唉，这是代沟么？我可是好努力地看完《芳华》的呢。</p><p>早点睡啦，明天要开始干活了吧？</p><p>三星的手环，从今天来看续航还行，功能很强，可以自动判定运动状态。</p><h1 id="18-2-16"><a href="#18-2-16" class="headerlink" title="18-2-16"></a>18-2-16</h1><p>白天去了一趟高沟。</p><p>哎呀呀，如果以暖气评定南北，没有空调的南方一定是最难熬的了。</p><p>拿到了东山大哥送的三星gear sport运动手表！</p><p>哇呀呀，试了一天，终于差不多摸清楚了，几乎可以写一篇指南。</p><p>默认的表带最紧处也显得松，emmm</p><p>唯一值得改进的地方是续航。</p><p>他们都说胖伦了。</p><p>应该规划一下接下来的行程了。</p><h1 id="18-2-15"><a href="#18-2-15" class="headerlink" title="18-2-15"></a>18-2-15</h1><p>一夜无眠，终于到家了。</p><p>中午回了趟老家，晚上在郝叔叔家。</p><p>除夕夜，鞭炮不绝。</p><p>河山寂寂，日月昭昭，博利禄于于一时，寄情思与山水。</p><p>点一盏红笼绽放烟花。</p><p>想象着趴在玻璃上看烟火的情形，子泰笑得很开心。</p><p>有时候我们觉得时间匆匆，要么是因为健忘，要么是因为没有耐心地珍惜每一天。</p><p>真的是健忘么？</p><h1 id="18-2-14"><a href="#18-2-14" class="headerlink" title="18-2-14"></a>18-2-14</h1><p>火车在飞驰，思绪复杂。</p><p>不存在的情人节，</p><p>一年又这样飞逝，碌碌。</p><p>我还在成长，但可以感到时间很近了。</p><p>对了，《告白气球》，杰伦又见春晚。</p><p>想到一种遗传算法的改进方法。</p><h1 id="18-2-13"><a href="#18-2-13" class="headerlink" title="18-2-13"></a>18-2-13</h1><p>建模终于结束啦，应该好好总结一下最近。</p><p>最后一天弄出来三个模型，画了很多还不错的图，不过排版出了一点问题，无所谓啦~</p><p>下面赶紧把论文的数据跑出来啊！</p><p>还有回家的时候抓紧写大创了。</p><p>啊，明天，回家，从来没有如此迫切。</p><h1 id="18-2-8"><a href="#18-2-8" class="headerlink" title="18-2-8"></a>18-2-8</h1><p>啊，所有的APP都开始浮现着浓浓的年味。</p><p>但是明天就开始美赛啦！</p><p>啊，本以为论文已经完结了</p><p>结果发现之前没有对海关的流出做出限制。</p><p>啊，重做一遍吧！又是对CPU的一次摧残，这样下去迟早要完，轻薄本拿来当台式机用。</p><h1 id="18-2-7"><a href="#18-2-7" class="headerlink" title="18-2-7"></a>18-2-7</h1><p>啊，炮姐刷完了~</p><p>光明、自信、担当，绝对。</p><p>愿不再胆小懦弱，畏首畏尾。</p><p>未来，需要用双手去开拓！</p><p>电磁炮上舰，陆基中段反导，</p><p>重型可回收火箭。</p><p>生活在这个日日新的时代，真好。</p><h1 id="18-2-6"><a href="#18-2-6" class="headerlink" title="18-2-6"></a>18-2-6</h1><p>又改了一天论文，效率马马虎虎。</p><p>啊，炮姐！</p><p>优化了参考文献的来源，</p><p>详细介绍了中欧班列运输组织的新需求和不确定时间的来源，</p><p>还有其他一些改动，</p><p>应该比较完美了。</p><h1 id="18-2-5"><a href="#18-2-5" class="headerlink" title="18-2-5"></a>18-2-5</h1><p>改了一天论文，但效率很低。</p><p>晚上和浩珉健身，效率很高。。</p><p>入坑炮姐。</p><!--more--><h1 id="18-2-4"><a href="#18-2-4" class="headerlink" title="18-2-4"></a>18-2-4</h1><p>哈哈哈，把参考文献加上了，论文的问题基本结束啦，下面是数学建模美赛和大创。</p><p>不过给任老师看了以后还是有很多问题的。。</p><p>任重道远啊！</p><p>可以逐步写一篇经验了。</p><h1 id="18-2-3"><a href="#18-2-3" class="headerlink" title="18-2-3"></a>18-2-3</h1><p>无论如何，今天一定要把论文改完！</p><p>哼！</p><p>啊，只剩下一些人员信息和参考文献啦，应该没有大问题了。</p><p>干杯！哔哩哔哩！~</p><p>2018年2月4日03:07:20</p><h1 id="18-2-2"><a href="#18-2-2" class="headerlink" title="18-2-2"></a>18-2-2</h1><p>啊，论文开始改格式啦。</p><p>忙活了一天，恶心到吐血。</p><p>mathtype那么难用，我靠，还是收费的。</p><p>连高分屏适配都做不了，各种细节完全不堪入目，还是个收费软件？？</p><p>emmm，总之我是不会支持这样的软件，靠。</p><p>要是软件都像Typora好用就好了。</p><p>早点睡，改不动了，明天应该可以完工了吧。</p><h1 id="18-2-1"><a href="#18-2-1" class="headerlink" title="18-2-1"></a>18-2-1</h1><p>时光匆匆，转眼就到了2月，加油！</p><p>啊，终于有单调的结果了，这简直是最美的风景！</p><p><img src="/2018/02/03/日记18-2/截图2018-02-01_11-43-51.png" alt="截图2018-02-01_11-43-51"></p><p>嘉哥也走了，宿舍里空荡荡的，这样的日子要持续到14号。</p><p>要不要发一条票圈，付费求聊天？好像没什么兴趣。</p><p>打字的时候，感觉自己在火星一样</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;18-2-28&quot;&gt;&lt;a href=&quot;#18-2-28&quot; class=&quot;headerlink&quot; title=&quot;18-2-28&quot;&gt;&lt;/a&gt;18-2-28&lt;/h1&gt;&lt;p&gt;终于又完成了论文一版的修改！&lt;/p&gt;
&lt;p&gt;喜大普奔！&lt;/p&gt;
&lt;p&gt;由于windows+高分屏，选择了miktex+texmaker&lt;/p&gt;
&lt;p&gt;感觉还不错&lt;/p&gt;
&lt;p&gt;晚上又陪妈妈看了一遍《摩登时代》，大师还是大师。&lt;/p&gt;
&lt;p&gt;完成了之前积压的两篇博客&lt;/p&gt;
&lt;h1 id=&quot;18-2-27&quot;&gt;&lt;a href=&quot;#18-2-27&quot; class=&quot;headerlink&quot; title=&quot;18-2-27&quot;&gt;&lt;/a&gt;18-2-27&lt;/h1&gt;&lt;p&gt;比之前强一些了，&lt;/p&gt;
&lt;p&gt;总归是改了一些论文了，&lt;/p&gt;
&lt;p&gt;虽然并不算什么进展。&lt;/p&gt;
&lt;p&gt;又学了不少日语，&lt;/p&gt;
&lt;p&gt;晚上和罗叔叔等吃饭，&lt;/p&gt;
&lt;p&gt;回来陪老爸看了《摩登时代》。&lt;/p&gt;
&lt;p&gt;明天应该就可以了。&lt;/p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://wang22ti.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>日记18-1</title>
    <link href="http://wang22ti.com/2018/01/31/%E6%97%A5%E8%AE%B018-1/"/>
    <id>http://wang22ti.com/2018/01/31/日记18-1/</id>
    <published>2018-01-30T18:08:09.000Z</published>
    <updated>2018-01-31T17:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="18-1-31"><a href="#18-1-31" class="headerlink" title="18-1-31"></a>18-1-31</h1><p>状态终于步入正轨了。</p><p>昨晚跑的数据仍然不是单调的，可能是之前精度设置太低了，再跑一个高精度的试试看吧。</p><p>在程序中加了一个小控制，如果不是单调的，就退出循环。</p><p>下午把宿舍好好收拾了一番，自己也用心地洗了一次澡，整个人精神了一些。</p><p>日记一个月一个文件吧，不然泛滥了，貌似关于hexo的个性化也可以整合一下。</p><p>今天有罕见的月全食+红月+蓝月！</p><p>良辰美景奈何天，伤心乐事谁家院？</p><p>你在楼上看风景，看风景的人在楼下看你。</p><p>忽然发现可以被百度搜到了！</p><p>不过“永远在路上”和“哭也欢乐，悲也潇洒”这两个。。有点尴尬。</p><p>就直接改叫“王子泰”吧！以后和别人介绍自己，就说“上百度搜我名字就行”，嘿嘿。</p><p>晚上新的更加宽松的数据貌似没有大问题。</p><a id="more"></a><h1 id="18-1-30"><a href="#18-1-30" class="headerlink" title="18-1-30"></a>18-1-30</h1><p> 本来已经睡下，但辗转反侧，于是又爬起来把日记搞定。</p><p>今天的效率依旧不是很高，但是已经基本完成了论文初稿的修改，任老师说已经完成70%。</p><p>不过发现之前的跑出来的两组数据竟然都不是单调的，实在是忧伤，今晚又尝试了一组数据。</p><p>回家之前一定要把稿子投出去！EI不是梦。</p><p>为什么睡不着呢？可能是因为白天听了《极乐净土》的官方中文版吧。二胡配钢琴，中国风的路线，不像日语版那么热情奔放。起初听的时候是不以为意的，但是的确被洗脑了。</p><p>想起来最近在B站听的《叙利亚之殇》和亮剑版的《玫瑰花的葬礼》，感慨颇多，就怕鬼畜有文化。</p><p>这样的歌再多一点，就可以专门写一篇了。</p><p>还想到最近蛮火的北大学生十万长文控诉父母。唉，众生皆苦。</p><p>感觉自己对情绪的控制更好些了。</p><p>但是为什么睡不着呢？？？</p><h1 id="18-1-29"><a href="#18-1-29" class="headerlink" title="18-1-29"></a>18-1-29</h1><p> 啊，今天午饭和晚饭都是吃的外卖，一个是煲仔饭，一个是照烧鸡排饭。</p><p>出乎意外的是，北京的外卖已经做得十分精致了，比印象中十年前家乡的外卖不知道强到哪里去了。</p><p>牛皮纸的包装，一副含有餐巾纸的餐具，菜和米饭分别用干净的盒子分别盛着，煲仔饭用的是上好的东北细米，猪排也十分得入围。</p><p>明天还吃，嘿嘿。</p><p>论文基本写完了，明天主要加上数值实验的原始数据啦。</p><p>哦对，还有几张图Orz</p><p>晚安！</p><h1 id="18-1-28"><a href="#18-1-28" class="headerlink" title="18-1-28"></a>18-1-28</h1><p>哎呀呀，论文还是没有能完成修改。</p><p>看来墨菲定理是正确的。</p><h1 id="18-1-27"><a href="#18-1-27" class="headerlink" title="18-1-27"></a>18-1-27</h1><p> 哎呀呀，期末考试不是很理想，沉重的心情一直持续到今天。</p><p>和爸爸麻麻聊了很久，感觉好多了。</p><p>还是得信任他们呀。</p><p>梦想是得有的，但也不必过分苛刻或是心急。</p><p>一步一个脚印，慢慢来吧。</p><p>论文改了不少，明天继续努力，应该可以改好！</p><p>加油，晚安！</p><h1 id="18-1-26"><a href="#18-1-26" class="headerlink" title="18-1-26"></a>18-1-26</h1><p> 今天没有堕落！</p><p>上午和下午参加了数学建模美赛，重要的是王兵团老师将的论文规范给了我修改项目论文的思路。</p><p>和管理创客的宋绍东叔叔聊了一会，发现叔叔不是想象中固执的中年人嘿嘿，还帮我问了信息中心把因为艺术生考试断掉的王打开了。</p><p>哇，好开心！</p><p>晚上和浩珉健身，啊啊啊结果玩了一会《决斗之城》错过了洗澡，舍友都睡了，GG</p><p>不过终于进行了一次有意思的决斗，最后我卡组用光了，虽然输了哈哈。</p><p>睡了，明天一定可以早起！洗澡、听讲座、继续改论文，有时间吧域名的那篇博客写一下。</p><p>另：</p><p>信息中心电话：<code>51688476</code></p><p>学校各座机查询电话：<code>51682222</code></p><h1 id="18-1-25"><a href="#18-1-25" class="headerlink" title="18-1-25"></a>18-1-25</h1><p>啊，又是堕落的一天。</p><p>除了完成了域名的解析，还有coding的git，啥都没干。</p><p>遇到不少坑，明天写吧。</p><p>绝对不能再颓废了。</p><h1 id="18-1-24"><a href="#18-1-24" class="headerlink" title="18-1-24"></a>18-1-24</h1><p> “8086！”</p><p>快递小哥总能带给我惊喜呢。</p><p>emmmmm，跑了一天的数据，貌似论文也没有进展，堕落！</p><p>不过博客倒是基本配置好了，最后的大的更新大概就是绑定域名和配置百度搜索了吧，不过域名还没下来。</p><p>早点睡了！明天一定要改好论文</p><h1 id="18-1-23"><a href="#18-1-23" class="headerlink" title="18-1-23"></a>18-1-23</h1><p>emmmmm，模型跑了一晚上，大概12个小时了吧，还没跑完，低压还是低压啊。</p><p>粗略的浏览了一些关于mooc评价体系的论文，开心地发现几乎没有做路径优化分析的。<br>不过里面提供的评价体系，的确值得认真研究一下。</p><p>模型跑完了，但是发现还有很多可以优化的地方，再来一次吧。</p><p>“嗨，到楼下铁门领外卖了。”<br>“是南门的那个吗？”<br>“对的，我在外面，你在里面。”<br>嗯嗯嗯？？？</p><p>花了一下午把中欧班列的程序大幅优化了一次，算是进步吧。<br>但是论文还没进展啊啊啊啊啊！！</p><p>晚上和浩珉健身。</p><p>调了一晚上参数，明天论文修改一定要有突破！</p><h1 id="18-1-22"><a href="#18-1-22" class="headerlink" title="18-1-22"></a>18-1-22</h1><p>午睡醒来的时候，房间里空空荡荡，外面也寂静无声，仿佛我不曾来过这个世界，世界也未曾把我印在脑海。</p><p>以本科生的身份为第一作者投交大学报，是不接受审稿的。幸运的是，交大的另外一份期刊《交通运输系统工程》，不仅是EI，还接受本科生投稿。不过是双月刊，审稿时间比较长，还得斟酌一下。退而求其次，还可以投《计算机工程与应用》，一份核心期刊。</p><p>今天完成了引言的修改，优化了数值实验的参数，模型足够跑一晚上了。</p><p>进度还得加紧，早睡早起。</p><h1 id="18-1-21"><a href="#18-1-21" class="headerlink" title="18-1-21"></a>18-1-21</h1><p>完成了论文的初稿，要选一下期刊啦。</p><p>本来写了一个调用word转markdown网页的脚本，但是到了晚上发现被屏蔽了。<br>忧伤那么大，模拟浏览器也不行。<br>算了，手动吧，这是报废的代码：<br><!--more--></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DocToMarkdown</span><span class="params">(object)</span>:</span></span><br><span class="line">    web_url = <span class="string">r'https://word-to-markdown.herokuapp.com/'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2'</span>,</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'word-to-markdown.herokuapp.com'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">    post_headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: <span class="string">'word-to-markdown.herokuapp.com'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'https://word-to-markdown.herokuapp.com/'</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, out_path, title, category, tags)</span>:</span></span><br><span class="line">        self.out_path = out_path</span><br><span class="line">        self.title = title</span><br><span class="line">        self.file_name = title + <span class="string">'.docx'</span></span><br><span class="line">        self.category = category</span><br><span class="line">        self.tags = tags</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">tags_to_string</span><span class="params">(self)</span>:</span></span><br><span class="line">        ret_str = <span class="string">'['</span></span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> self.tags:</span><br><span class="line">            ret_str += (item + <span class="string">', '</span>)</span><br><span class="line">        ret_str += <span class="string">']'</span></span><br><span class="line">        <span class="keyword">return</span> ret_str</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">head_for_hexo</span><span class="params">(self)</span>:</span></span><br><span class="line">        data = time.strftime(<span class="string">'%Y-%m-%d %H:%M:%S'</span>, time.localtime(time.time()))</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'---\ntitle: %s\ndate: %s\ncategories: %s\ntags: %s\n---\n'</span> % (</span><br><span class="line">            self.title, data, self.category, self.tags_to_string())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">doc_to_markdown</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'converting...'</span>)</span><br><span class="line">        document = &#123;</span><br><span class="line">            <span class="string">'doc'</span>: (self.file_name, open(self.file_name, <span class="string">'rb'</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># r = requests.get(self.web_url, headers=self.headers)</span></span><br><span class="line">        <span class="comment"># print(r.status_code)</span></span><br><span class="line">        <span class="comment"># r = requests.get(r'https://word-to-markdown.herokuapp.com/vendor/bootstrap/dist/css/bootstrap.min.css',</span></span><br><span class="line">        <span class="comment">#              headers=self.headers)</span></span><br><span class="line">        <span class="comment"># print(r.status_code)</span></span><br><span class="line">        <span class="comment"># r = requests.get(r'https://word-to-markdown.herokuapp.com/assets/style.css', headers=self.headers)</span></span><br><span class="line">        <span class="comment"># print(r.status_code)</span></span><br><span class="line">        <span class="comment"># time.sleep(1)</span></span><br><span class="line">        r = requests.post(self.web_url, files=document, headers=self.post_headers)</span><br><span class="line">        print(r.status_code)</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        soup = BeautifulSoup(r.text, <span class="string">'html5lib'</span>)</span><br><span class="line">        markdown = soup.find(id=<span class="string">'markdown'</span>).string</span><br><span class="line">        markdown = self.head_for_hexo() + markdown</span><br><span class="line">        print(<span class="string">'OK-convert '</span>)</span><br><span class="line">        <span class="keyword">return</span> markdown</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">markdown_to_file</span><span class="params">(self)</span>:</span></span><br><span class="line">        out_file = self.title + <span class="string">'.md'</span></span><br><span class="line">        <span class="keyword">with</span> open(os.path.join(self.out_path, out_file), <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(self.doc_to_markdown())</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.markdown_to_file()</span><br><span class="line">        print(<span class="string">'OK-write to file '</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">out_path = <span class="string">r'D:\45504\Documents\个人文件_Miix720\小米同步\Blog\source\_posts'</span></span><br><span class="line"><span class="comment"># title = input('filename:')</span></span><br><span class="line"><span class="comment"># category = input('category:')</span></span><br><span class="line"><span class="comment"># tags = input('tags:').split(' ')</span></span><br><span class="line">title = <span class="string">'word自动转markdown'</span></span><br><span class="line">category = <span class="string">'hexo'</span></span><br><span class="line">tags = [<span class="string">'python'</span>, <span class="string">'requests'</span>, <span class="string">'bs4'</span>, <span class="string">'markdown'</span>]</span><br><span class="line">DocToMarkdown(out_path, title, category, tags).run()</span><br></pre></td></tr></table></figure><h1 id="18-1-20"><a href="#18-1-20" class="headerlink" title="18-1-20"></a>18-1-20</h1><p>终于下定决心写博客了。<br>一方面为了科研，一方面为了生活。</p><p>平凡的一天。<br>项目的论文开了头，明天要完成。<br>要加紧做大创了。</p><p>去逸夫的路上，<br>“你好呀，我来邀请你了解圣经。”<br>“抱歉，我是党员。”<br>“党员也可以了解圣经啊。”<br>“抱歉，党员绝不了解圣经。”</p><p>是什么让她感觉党员可以了解圣经？</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;18-1-31&quot;&gt;&lt;a href=&quot;#18-1-31&quot; class=&quot;headerlink&quot; title=&quot;18-1-31&quot;&gt;&lt;/a&gt;18-1-31&lt;/h1&gt;&lt;p&gt;状态终于步入正轨了。&lt;/p&gt;
&lt;p&gt;昨晚跑的数据仍然不是单调的，可能是之前精度设置太低了，再跑一个高精度的试试看吧。&lt;/p&gt;
&lt;p&gt;在程序中加了一个小控制，如果不是单调的，就退出循环。&lt;/p&gt;
&lt;p&gt;下午把宿舍好好收拾了一番，自己也用心地洗了一次澡，整个人精神了一些。&lt;/p&gt;
&lt;p&gt;日记一个月一个文件吧，不然泛滥了，貌似关于hexo的个性化也可以整合一下。&lt;/p&gt;
&lt;p&gt;今天有罕见的月全食+红月+蓝月！&lt;/p&gt;
&lt;p&gt;良辰美景奈何天，伤心乐事谁家院？&lt;/p&gt;
&lt;p&gt;你在楼上看风景，看风景的人在楼下看你。&lt;/p&gt;
&lt;p&gt;忽然发现可以被百度搜到了！&lt;/p&gt;
&lt;p&gt;不过“永远在路上”和“哭也欢乐，悲也潇洒”这两个。。有点尴尬。&lt;/p&gt;
&lt;p&gt;就直接改叫“王子泰”吧！以后和别人介绍自己，就说“上百度搜我名字就行”，嘿嘿。&lt;/p&gt;
&lt;p&gt;晚上新的更加宽松的数据貌似没有大问题。&lt;/p&gt;
    
    </summary>
    
      <category term="日记" scheme="http://wang22ti.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>个性化hexo</title>
    <link href="http://wang22ti.com/2018/01/30/%E4%B8%AA%E6%80%A7%E5%8C%96hexo/"/>
    <id>http://wang22ti.com/2018/01/30/个性化hexo/</id>
    <published>2018-01-30T13:32:28.000Z</published>
    <updated>2018-01-31T13:56:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><ol><li>下载一个喜欢的主题（ <a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">知乎：有哪些好看的 Hexo 主题？</a>）放到theme文件夹下</li><li>改一下全局配置文件_config.yml中的theme字段为步骤1中的文件夹的名字</li><li>运行git bash，键入hexo g</li></ol><p>当然了，如果有兴趣还可以参考配置文档，例如 <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">next主题</a></p><a id="more"></a><h1 id="next添加分类标签"><a href="#next添加分类标签" class="headerlink" title="next添加分类标签"></a>next添加分类标签</h1><p>next默认是没有分类<code>categories</code>和标签<code>tags</code>页面的，需要手动开启。</p><p>（很奇怪为什么这么基础的功能不默认打开）</p><p><a href="http://theme-next.iissnan.com/theme-settings.html#author-sites" target="_blank" rel="noopener">官方文档</a>就有配置方法，很详细，不赘述。</p><p>另外还有站点建立时间、打赏、微信公众号、背景动画、搜索等等。</p><p><del>我只是搬运工</del></p><h1 id="next统计文章字数"><a href="#next统计文章字数" class="headerlink" title="next统计文章字数"></a>next统计文章字数</h1><p> 按照大多数网上的教程设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true         # 单篇 字数统计</span><br><span class="line">  min2read: true          # 单篇 阅读时长</span><br><span class="line">  totalcount: false       # 网站 字数统计</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>之后，会发现虽然出现了统计的组件，但是根本没有数字信息，需要在git bash输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>安装字数统计的插件。</p><p>具体操作参加博客<a href="https://www.jianshu.com/p/baea8c95e39b" target="_blank" rel="noopener">Hexo添加字数统计、阅读时长</a></p><h1 id="next统计访问次数"><a href="#next统计访问次数" class="headerlink" title="next统计访问次数"></a>next统计访问次数</h1><p> 统计访问次数需要借助第三方应用，应该属于比较新的功能吧，因为针对旧的版本有<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanClou" target="_blank" rel="noopener">官方指南</a></p><h1 id="不过"><a href="#不过" class="headerlink" title="不过"></a><strong>不过</strong></h1><p>新的版本里面已经集成了相关的文件，所以只需要修改配置文件即可（可坑死我了，按照指南配了一遍又删了一遍）</p><p>相关指南很多啦，不做赘述，选<a href="http://blog.csdn.net/ganzhilin520/article/details/79048021" target="_blank" rel="noopener">一个比较简洁的博客</a>（里面还有将阅读次数修改为热度的奇技淫巧）</p><p>此外，还有<a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="noopener">不蒜子</a>，只需要两行代码，似乎也很棒。这是前人的<a href="https://www.jianshu.com/p/8a8f880f40c0" target="_blank" rel="noopener">使用指南</a>。</p><h2 id="真是够了"><a href="#真是够了" class="headerlink" title="真是够了"></a>真是够了</h2><p>LeanCloud只是看起来还不错，但是经过两天我自己的访问，已经用完了免费的次数。</p><p>太少了！</p><p>还是用不蒜子吧！何况新的版本已经集成了！配置很简单，其中标签<code>i</code>的string可以随意修改。</p><p><code>pv</code>有一次就会计算一次，<code>uv</code>同一个用户访问多次只记录一次。</p><p><img src="/2018/01/30/个性化hexo/1516807006820.png" alt="1516807006820"></p><p>不过如果用本地服务器登录，站点的访问次数会很高，大概是不蒜子的服务器没有区分吧。提交到GitHub后通过互联网访问就正常了。</p><h1 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h1><p>嗯，这里面的坑实在大。</p><p><code>多说</code>和<code>网易云</code>跟帖已经停止服务了。</p><p><code>畅言</code>需要备案，很复杂的样子。<code></code></p><p><code>disqus</code>被墙了，很烦人。</p><p><code>valine</code>需要使用leancloud，免费的可能根本不够用。</p><p>啊啊，最后用了<a href="https://livere.com/" target="_blank" rel="noopener"><code>来必力</code></a>，不得不吐槽这糟糕的翻译，是一个韩国的服务器。</p><p>要用邮箱注册，会向注册邮箱发一个验证码。槽点在于：</p><p><strong>验证过程中可能遇到韩文！！！</strong></p><p><img src="/2018/01/30/个性化hexo/1516812886623.png" alt="1516812886623"></p><p><img src="/2018/01/30/个性化hexo/1516813084208.png" alt="1516813084208"></p><p>好吧，没事，只要知道需要输入的是验证码就行，虽然反应超级慢。</p><hr><p>不过安装的过程还是比较好的，</p><p>选一个city版，会显示 安装代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 来必力City版安装代码 --&gt;</span><br><span class="line">&lt;div id=<span class="string">"lv-container"</span> data-id=<span class="string">"city"</span> data-uid=<span class="string">"*****************"</span>&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">   (<span class="function"><span class="keyword">function</span>(<span class="params">d, s</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">var</span> j, e = d.getElementsByTagName(s)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">typeof</span> LivereTower === <span class="string">'function'</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">       j = d.createElement(s);</span><br><span class="line">       j.src = <span class="string">'https://cdn-city.livere.com/js/embed.dist.js'</span>;</span><br><span class="line">       j.async = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">       e.parentNode.insertBefore(j, e);</span><br><span class="line">   &#125;)(<span class="built_in">document</span>, <span class="string">'script'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;noscript&gt;为正常使用来必力评论功能请激活JavaScript&lt;/</span>noscript&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- City版安装代码已完成 --&gt;</span></span><br></pre></td></tr></table></figure><p>由于next集成了来必力，所以只需要将<code>data-uid</code>粘贴到配置文件就行，不必把代码都粘过去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">livere_uid: *****************</span><br></pre></td></tr></table></figure><p>还可以再登录官网管理评论，就不赘述了，要关掉其他的评论插件。</p><h1 id="绑定域名和被百度搜索到"><a href="#绑定域名和被百度搜索到" class="headerlink" title="绑定域名和被百度搜索到"></a>绑定域名和被百度搜索到</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;主题&quot;&gt;&lt;a href=&quot;#主题&quot; class=&quot;headerlink&quot; title=&quot;主题&quot;&gt;&lt;/a&gt;主题&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;下载一个喜欢的主题（ &lt;a href=&quot;https://www.zhihu.com/question/24422335&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎：有哪些好看的 Hexo 主题？&lt;/a&gt;）放到theme文件夹下&lt;/li&gt;
&lt;li&gt;改一下全局配置文件_config.yml中的theme字段为步骤1中的文件夹的名字&lt;/li&gt;
&lt;li&gt;运行git bash，键入hexo g&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当然了，如果有兴趣还可以参考配置文档，例如 &lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;next主题&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://wang22ti.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://wang22ti.com/tags/hexo/"/>
    
      <category term="next" scheme="http://wang22ti.com/tags/next/"/>
    
      <category term="主题" scheme="http://wang22ti.com/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="分类标签" scheme="http://wang22ti.com/tags/%E5%88%86%E7%B1%BB%E6%A0%87%E7%AD%BE/"/>
    
      <category term="文章字数" scheme="http://wang22ti.com/tags/%E6%96%87%E7%AB%A0%E5%AD%97%E6%95%B0/"/>
    
      <category term="访问次数" scheme="http://wang22ti.com/tags/%E8%AE%BF%E9%97%AE%E6%AC%A1%E6%95%B0/"/>
    
      <category term="评论系统" scheme="http://wang22ti.com/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="域名" scheme="http://wang22ti.com/tags/%E5%9F%9F%E5%90%8D/"/>
    
      <category term="百度" scheme="http://wang22ti.com/tags/%E7%99%BE%E5%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>数学建模美赛讲座18-1-26</title>
    <link href="http://wang22ti.com/2018/01/26/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BE%8E%E8%B5%9B%E8%AE%B2%E5%BA%A718-1-26/"/>
    <id>http://wang22ti.com/2018/01/26/数学建模美赛讲座18-1-26/</id>
    <published>2018-01-26T13:48:03.000Z</published>
    <updated>2018-02-04T04:28:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>分为<code>MCM(数学建模竞赛)</code>和<code>ICM(交叉学科建模竞赛)</code>，前者题目开放，蓝色电子版证书；后者封闭，红色。</p><p>最佳3人一队，必须同一学校，强调团队合作精神。</p><a id="more"></a><p>成员可以来自任何专业，指导老师可以为任何人。</p><p>前些年竞赛题和解答论文可以参考<a href="www.mathmodels.org">www.mathmodels.org</a></p><h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>注册需要交100美元，有系统分配的控制号（参赛队号）才算报名成功，是队伍唯一的标志，包括提交文件都需要。交大找王兵团老师，纸质版的。</p><h1 id="题目发布"><a href="#题目发布" class="headerlink" title="题目发布"></a>题目发布</h1><p>美国东部时间下午5点，北京时间2月9号上午6点，发布题目，除了第一个其他是镜像</p><ol><li><a href="www.comap.com/undergraduate/contents/mcm">www.comap.com/undergraduate/contents/mcm</a></li><li><a href="www.comap-math.com/mcm/index.html">www.comap-math.com/mcm/index.html</a></li><li><a href="www.comap-math.com/mcm/index.html">www.comap-math.com/mcm/index.html</a></li><li><a href="www.mathismore.net/mcm/index.html">www.mathismore.net/mcm/index.html</a></li><li><a href="www.mathportals.net/mcm/index.html">www.mathportals.net/mcm/index.html</a></li><li><a href="www.immchallenge.org/mcm/index.html">www.immchallenge.org/mcm/index.html</a></li></ol><p>选题时间不超过1天半（有些人找老婆需要一辈子，有些人只需要一眼）</p><p>题目网上有翻译，最好看原文。</p><p>需要了解MCM和ICM的差异，一共6道题目</p><p><code>MCM</code>连续A、离散B、数据分析C</p><p><code>ICM</code>运筹学/网络科学D、环境科学E、政策研究F</p><p>每个题都有不同的获奖比例，对于难题获奖比例高，并不一定要做完，做完也不一定得奖，比的是相对能力。并不是用一个数学方法解决了就能得奖。一等奖论文一般至少有20页，尽量丰富。</p><h1 id="论文撰写与提交"><a href="#论文撰写与提交" class="headerlink" title="论文撰写与提交"></a>论文撰写与提交</h1><p>比赛过程中是不应该有任何队员以外的人的介入，包括指导老师。</p><p>结论需要数据，数学处理。比的就是想法，把实际问题转化为数学模型、数学描述，不是结论获得的过程，因此论文中无非论文的支撑材料例如程序、软件，可以有算法描述。</p><p>主要内容为公式、图表，甚至占到比三分之一还高，部分中国的阅卷老师受制于英文水平，重点看公式。外国的阅卷老师一般只看特等奖或一等奖。另外，不要放太多的图表，要选一部分写出结论。</p><p>比赛过程中，如果发现题目有不完善的地方，会在网站上更新。也可以发送邮件到<a href="">mcm@comap.com</a>反馈，其中要包括参赛号。</p><p>英文，字体不小于12p，纸张不大于a4页眉必须有参赛号<code>Team#*****</code>和页码数，<code>summary sheet</code>不需要页眉，只能写1页，解答从第2页开始。</p><p>论文中不能出现除参赛号以外的任何个人信息，如果需要写信，<code>sincerely, Team #******</code></p><p>论文文件格式为pdf或word，文件名为参赛号，发送到邮箱<a href="">solutions@comap.com</a>，主题为<code>COMAP 参赛号</code>，不要重复发送，附件小于17MB，不要使用云附件或超大附件。</p><p>控制页要签名，选好题才能有，打印拍好，以pdf或图像格式发送到<a href="">forms@comap.com</a>，其他要求同上。</p><p>提交48小时后，如果论文电子版状态显示<code>Received</code>就OK，如果是<code>not yet received</code>就得重发</p><h1 id="评审与奖项"><a href="#评审与奖项" class="headerlink" title="评审与奖项"></a>评审与奖项</h1><p>评审在3月到4月完成，结果4月30号之前公布，分为</p><p><code>不合格Disqualified</code>：违反竞赛规则，取消资格</p><p><code>不超过参赛Unsuccessful</code>：没完成基本问题</p><p><code>成功参赛Successful Participant</code>：完成基本要求，给出结果</p><p><code>优秀Honorable Mention</code>：包含建模和问题解决的全部要素，超过平均水平</p><p><code>优异Meritorious</code>：全部要素，很多方面优秀，表述清晰</p><p><code>优胜提名Finalist</code>：进入最后一轮评审，2%</p><p><code>优胜Outstanding Winner</code>：公开出版</p><p>官网<code>download certification</code>下载电子版证书，随时都可以下载。</p><p>Media Contest，参赛者免费的多媒体竞赛</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>性别混合队伍，女生可以进男生宿舍，男生不能进女生。从2月8号可以进。</p><p><code>公共邮箱</code><a href="">xxdswbt@163.com</a></p><p><code>密码</code>认识我的直接找我要吧</p><h1 id="数学建模论文的9个部分"><a href="#数学建模论文的9个部分" class="headerlink" title="数学建模论文的9个部分"></a>数学建模论文的9个部分</h1><h2 id="1-摘要summary"><a href="#1-摘要summary" class="headerlink" title="1. 摘要summary"></a>1. 摘要<code>summary</code></h2><p>   第一页的后2/3，论文的压缩总结，10-15分，用来在大规模论文中进行初选。</p><h2 id="2-问题叙述introduction-amp-background"><a href="#2-问题叙述introduction-amp-background" class="headerlink" title="2. 问题叙述introduction&amp;background"></a>2. 问题叙述<code>introduction</code>&amp;<code>background</code></h2><p>   把题目用自己的话叙述一下</p><h2 id="3-模型假设与符号说明assumption-amp-description"><a href="#3-模型假设与符号说明assumption-amp-description" class="headerlink" title="3. 模型假设与符号说明assumption&amp;description"></a>3. 模型假设与符号说明<code>assumption</code>&amp;<code>description</code></h2><p>   选取问题的主要矛盾，简化次要矛盾，美赛当中可能还需要概念说明。</p><h2 id="4-模型的建立"><a href="#4-模型的建立" class="headerlink" title="4. 模型的建立"></a>4. 模型的建立</h2><p>   主体，不要指望用现成的模型求解问题就得奖</p><p>   可以通过不同的角度提出不同的问题并加以建模</p><h2 id="5-模型的求解solution"><a href="#5-模型的求解solution" class="headerlink" title="5. 模型的求解solution"></a>5. 模型的求解<code>solution</code></h2><p>   软件能算出来当然ok，然而可能算不出来。这时要用数学处理简化求解过程（数值分析）</p><p>   一般来说结果只要不是太离谱，都默认是对的。由于假设不同，很有可能相同题目的结果并不一样，但这并不重要，关键在于建模的过程。</p><h2 id="6-模型检验与误差分析"><a href="#6-模型检验与误差分析" class="headerlink" title="6. 模型检验与误差分析"></a>6. 模型检验与误差分析</h2><p>   近似方法的可用性，占分并不高</p><h2 id="7-模型评价strength-amp-weakness"><a href="#7-模型评价strength-amp-weakness" class="headerlink" title="7. 模型评价strength&amp;weakness"></a>7. 模型评价<code>strength</code>&amp;<code>weakness</code></h2><p>   不重要但是必须得有。由于文化的差异，不要谦虚了，坚信自己不是”微小的工作“。</p><p>   毛病可以写，但是不要写本质的毛病。 </p><h2 id="8-参考文献reference"><a href="#8-参考文献reference" class="headerlink" title="8. 参考文献reference"></a>8. 参考文献<code>reference</code></h2><p>   很重要，使用了别人的方法没注明参考文献会被认为抄袭，列出来不会影响结果。</p><p>   中文的翻译为英文，网页也是可以有的</p><h2 id="9-附录appendix"><a href="#9-附录appendix" class="headerlink" title="9. 附录appendix"></a>9. 附录<code>appendix</code></h2><p>   可有可无，不要放代码！代码优劣可以放在算法描述中。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;分为&lt;code&gt;MCM(数学建模竞赛)&lt;/code&gt;和&lt;code&gt;ICM(交叉学科建模竞赛)&lt;/code&gt;，前者题目开放，蓝色电子版证书；后者封闭，红色。&lt;/p&gt;
&lt;p&gt;最佳3人一队，必须同一学校，强调团队合作精神。&lt;/p&gt;
    
    </summary>
    
      <category term="数学建模美赛" scheme="http://wang22ti.com/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BE%8E%E8%B5%9B/"/>
    
    
      <category term="数学建模" scheme="http://wang22ti.com/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
      <category term="论文格式" scheme="http://wang22ti.com/tags/%E8%AE%BA%E6%96%87%E6%A0%BC%E5%BC%8F/"/>
    
  </entry>
  
</feed>
